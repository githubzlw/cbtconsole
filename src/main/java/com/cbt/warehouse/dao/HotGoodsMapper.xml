<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cbt.warehouse.dao.HotGoodsMapper">

	<resultMap id="hotSellingCategoryResultMap" type="com.cbt.warehouse.pojo.HotSellingCategory">
		<id column="id" property="id" />
		<result column="category_id" property="categoryId" />
		<result column="category_name" property="categoryName" />
		<result column="show_name" property="showName" />
		<result column="show_img" property="showImg" />
		<result column="is_on" property="isOn" />
		<result column="sorting" property="sorting" />
		<result column="remark" property="remark" />
		<result column="create_admid" property="createAdmid" />
		<result column="create_time" property="createTime" />
		<result column="update_admid" property="updateAdmid" />
		<result column="update_time" property="updateTime" />
	</resultMap>

	<resultMap id="hotSellingGoodsResultMap" type="com.cbt.warehouse.pojo.HotSellingGoods">
		<id column="id" property="id" />
		<result column="hot_selling_id" property="hotSellingId" />
		<result column="goods_pid" property="goodsPid" />
		<result column="goods_name" property="goodsName" />
		<result column="show_name" property="showName" />
		<result column="goods_url" property="goodsUrl" />
		<result column="goods_img" property="goodsImg" />
		<result column="goods_price" property="goodsPrice" />
		<result column="is_on" property="isOn" />
		<result column="profit_margin" property="profitMargin" />
		<result column="selling_price" property="sellingPrice" />
		<result column="create_admid" property="createAdmid" />
		<result column="create_time" property="createTime" />
		<result column="update_admid" property="updateAdmid" />
		<result column="update_time" property="updateTime" />
		<result column="goods_path" property="goodsPath" />
		<result column="isNewCloud" property="isNewCloud" />
	    <result column="range_price" property="rangePrice" />
	    <result column="goods_unit" property="goodsUnit" />
	    <result column="wprice" property="wprice" />
	    <result column="amazon_price" property="amazonPrice" />
	    <result column="asin_code" property="asinCode" />

		<result column="discount_id" property="discountId" />
		<result column="discount_percentage" property="discountPercentage" />
		<result column="discount_begin_time" property="discountBeginTime" />
		<result column="discount_end_time" property="discountEndTime" />
		<result column="discount_sort" property="discountSort" />

		<result column="evaluation_id" property="evaluationId" />
		<result column="evaluation_sku_id" property="evaluationSkuId" />
		<result column="evaluation_user_id" property="evaluationUserId" />
		<result column="evaluation_content" property="evaluationContent" />
		<result column="evaluation_level" property="evaluationLevel" />
		<result column="evaluation_service_level" property="evaluationServiceLevel" />
		<result column="evaluation_time" property="evaluationTime" />
		<result column="is_sold_flag" property="isSoldFlag" />
		<result column="feeprice" property="feeprice" />

	</resultMap>

	<resultMap id="CustomGoodsBeanResultMap" type="com.cbt.bean.CustomGoodsBean">
		<id column="id" property="id" />
		<result column="catid" property="catid" />
		<result column="catid1" property="catid1" />
		<result column="pid" property="pid" />
		<result column="img" property="img" />
		<result column="url" property="url" />
		<result column="localpath" property="localpath" />
		<result column="remotpath" property="remotpath" />
		<result column="name" property="name" />
		<result column="enname" property="enname" />
		<result column="price" property="price" />
		<result column="wprice" property="wprice" />
		<result column="isNewCloud" property="isNewCloud" />
	</resultMap>

	<sql id="hotSellingCategoryColumn">
		id,category_id,category_name,show_name,show_img,is_on,sorting,
		remark,create_admid,create_time,update_admid,update_time
	</sql>

	<sql id="hotSellingGoodsCategoryColumn">
		id,hot_selling_id,goods_pid,goods_name,show_name,goods_url,
		goods_img,goods_price,is_on,profit_margin,selling_price,
		wholesale_price_1,wholesale_price_2,wholesale_price_3,wholesale_price_4,wholesale_price_5,
		create_admid,create_time,update_admid,update_time,goods_path
	</sql>

	<sql id="customGoodsColumn">
		id,catid,catid1,pid,img,url,
		localpath,remotpath,name,enname,price,wprice
	</sql>

	<sql id="hotSellingCategoryTmpColumn">
		id,category_id,category_name,show_name,is_on,sorting
	</sql>

	<sql id="hotSellingGoodsCategoryTmpColumn">
		id,hot_selling_id,goods_pid,goods_name,show_name,goods_url,
		goods_img,goods_price,is_on,profit_margin,selling_price,goods_path
	</sql>

	<select id="queryForList" resultMap="hotSellingCategoryResultMap">
		select
		<include refid="hotSellingCategoryColumn" />
		from hot_selling_category
		where 1=1
		order by is_on desc,sorting
	</select>

	<update id="updateHotSellingCategory" parameterType="com.cbt.warehouse.pojo.HotSellingCategory">
		update hot_selling_category
		<set>
			<if test="showName !=null and showName !='' ">
				show_name = #{showName,jdbcType=VARCHAR},
			</if>
			<if test="sorting !=0 ">
				sorting = #{sorting,jdbcType=INTEGER},
			</if>
			<if test="isOn !=null and isOn !='' ">
				is_on = #{isOn,jdbcType=VARCHAR},
			</if>
			update_admid = #{updateAdmid,jdbcType=INTEGER},
			update_time =
			SYSDATE()
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!--<select id="queryByHotSellingCategory" resultMap="hotSellingGoodsResultMap">
		select aa.*,bb.id as discount_id,bb.percentage as discount_percentage,
		DATE_FORMAT(bb.begin_time,'%Y-%m-%d %H:%i:%S') as discount_begin_time,
		DATE_FORMAT(bb.end_time,'%Y-%m-%d %H:%i:%S') as discount_end_time,bb.sort  as discount_sort from
		(select b.enname as show_name,a.amazon_price,a.asin_code,a.goods_img,a.hot_selling_id,a.goods_url,a.goods_pid,
	       b.price as goods_price,b.wprice,b.range_price,b.sellunit as goods_unit,b.isNewCloud,a.profit_margin,a.id,a.is_on
		from hot_selling_goods a,custom_benchmark_ready b 
			where a.hot_selling_id = #{hot_selling_id} and a.goods_pid = b.pid and b.valid != 0
			UNION all
		select b.enname as show_name,a.amazon_price,a.asin_code,a.goods_img,a.hot_selling_id,a.goods_url,a.goods_pid,
	       b.price as goods_price,b.wprice,b.range_price,b.sellunit as goods_unit,b.isNewCloud,a.profit_margin,a.id,a.is_on
		from hot_selling_goods a,custom_benchmark_ready_cloud b 
			where a.hot_selling_id = #{hot_selling_id} and a.goods_pid = b.pid and b.valid != 0) as aa
		left join hot_goods_discount bb on aa.goods_pid =bb.goods_pid and aa.hot_selling_id =bb.hot_id
		order by is_on desc,profit_margin desc
	</select>-->


	<select id="queryByHotSellingCategory" resultMap="hotSellingGoodsResultMap">
		select aa.*,bb.id as discount_id,bb.percentage as discount_percentage,
		DATE_FORMAT(bb.begin_time,'%Y-%m-%d %H:%i:%S') as discount_begin_time,
		DATE_FORMAT(bb.end_time,'%Y-%m-%d %H:%i:%S') as discount_end_time,ifnull(bb.sort,0) as discount_sort,
		cc.id as evaluation_id,cc.sku_id as evaluation_sku_id,cc.user_id as evaluation_user_id,cc.content as evaluation_content,
		cc.evaluation_level,cc.service_level as evaluation_service_level,DATE_FORMAT(cc.evaluation_time,'%Y-%m-%d %H:%i:%S') as evaluation_time
		from
		(select b.enname as show_name,a.amazon_price,a.asin_code,a.goods_img,a.hot_selling_id,a.goods_url,a.goods_pid,
		b.price as goods_price,b.wprice,b.range_price,b.sellunit as goods_unit,b.isNewCloud,a.profit_margin,a.id,a.is_on,
		b.is_sold_flag,b.feeprice
		from hot_selling_goods a,custom_benchmark_ready b
		where a.hot_selling_id = #{hotCategoryId} and a.goods_pid = b.pid and b.valid =1) as aa
		left join hot_goods_discount bb on aa.goods_pid =bb.goods_pid and aa.hot_selling_id =bb.hot_id
		left join hot_goods_evaluation cc on aa.goods_pid =cc.goods_pid
		<if test=" hotType == 2">
			order by is_on desc,discount_sort desc
		</if>
		<if test=" hotType != 2">
			order by is_on desc,profit_margin desc
		</if>
	</select>

	<insert id="insertHotSellingGoods" parameterType="com.cbt.warehouse.pojo.HotSellingGoods">
		insert into
		hot_selling_goods
		(hot_selling_id,goods_pid,goods_name,show_name,		goods_url,goods_img,goods_price,is_on,
		profit_margin,selling_price,wholesale_price_1,wholesale_price_2,
		wholesale_price_3,wholesale_price_4,wholesale_price_5,create_admid,amazon_price,asin_code)
		values(#{hotSellingId,jdbcType=INTEGER},#{goodsPid,jdbcType=VARCHAR},#{goodsName,jdbcType=VARCHAR},#{showName,jdbcType=VARCHAR},
		#{goodsUrl,jdbcType=VARCHAR},#{goodsImg,jdbcType=VARCHAR},#{goodsPrice,jdbcType=DOUBLE},#{isOn,jdbcType=VARCHAR},
		#{profitMargin,jdbcType=DOUBLE},#{sellingPrice,jdbcType=DOUBLE},#{wholesalePrice_1,jdbcType=DOUBLE},#{wholesalePrice_2,jdbcType=DOUBLE},
		#{wholesalePrice_3,jdbcType=DOUBLE},#{wholesalePrice_4,jdbcType=DOUBLE},#{wholesalePrice_5,jdbcType=DOUBLE},
		#{createAdmid,jdbcType=INTEGER},#{amazonPrice,jdbcType=DOUBLE},#{asinCode,jdbcType=VARCHAR})
	</insert>

	<delete id="deleteGoodsByPid">
		delete from hot_selling_goods
		where hot_selling_id =
		#{categoryId,jdbcType=INTEGER}
		and goods_pid =
		#{goodsPid,jdbcType=VARCHAR}
	</delete>

	<update id="updateHotSellingGoods" parameterType="com.cbt.warehouse.pojo.HotSellingGoods">
		update hot_selling_goods
		<set>
			<if test="isOn !=null and isOn !='' ">
				is_on = #{isOn,jdbcType=VARCHAR},
			</if>
			<if test="amazonPrice !=0 ">
				amazon_price = #{amazonPrice,jdbcType=DOUBLE},
			</if>	
			<if test="asinCode !=null and asinCode !='' ">
				asin_code = #{asinCode,jdbcType=VARCHAR},
			</if>		
			<if test="profitMargin !=0 ">
				profit_margin = #{profitMargin,jdbcType=DOUBLE},
			</if>
			update_admid = #{updateAdmid,jdbcType=INTEGER},
			update_time = SYSDATE()
		</set>
		where hot_selling_id = #{hotSellingId,jdbcType=INTEGER}
		and id =
		#{id,jdbcType=INTEGER}
	</update>

	<delete id="deleteHotSellingGoodsTmp">
		delete from hot_selling_goods_tmp where id =
		#{hsGoodsId,jdbcType=INTEGER}
	</delete>

	<select id="genHotCategoryAndGoods">
		{call gen_hot_category_goods()}
	</select>

	<select id="queryForByTmp" resultMap="hotSellingGoodsResultMap">
		select
		<include refid="hotSellingGoodsCategoryTmpColumn" />
		from hot_selling_goods_tmp
		where 1=1
	</select>

	<update id="updateHotSellingGoodsValid">
		update hot_selling_goods set valid ='1'
		where valid
		='0'
	</update>

	<update id="updateHotSellingGoodsPid">
		update hot_selling_goods
		set goods_pid
		=#{goodsPid,jdbcType=VARCHAR}
		where id =
		#{hsGoodsId,jdbcType=INTEGER}
	</update>

	<update id="updateHotSellingGoodsImgUrl">
		update hot_selling_goods
		set goods_img
		=#{goodsImgUrl,jdbcType=VARCHAR}
		where id =
		#{hsGoodsId,jdbcType=INTEGER}
	</update>

	<delete id="deleteHotSellingGoodsByImgUrl">
		delete from hot_selling_goods
		where
		ifnull(goods_img,'')=''
	</delete>

	<select id="queryInsertCategory" resultMap="hotSellingCategoryResultMap">
		select
		<include refid="hotSellingCategoryTmpColumn" />
		from hot_selling_category_tmp
		where 1=1
	</select>

	<select id="queryInsertGoods" resultMap="hotSellingGoodsResultMap">
		select
		<include refid="hotSellingGoodsCategoryTmpColumn" />
		from hot_selling_goods_tmp
		where 1=1
	</select>

	<insert id="insertCategoryToOnLine" parameterType="java.util.List">

		<foreach collection="list" item="category" index="index"
			separator=";">
			insert into hot_selling_category
			(category_id,category_name,show_name,is_on,sorting)
			values
			(#{category.categoryId},#{category.categoryName},#{category.showName},
			#{category.isOn},#{category.sorting})
		</foreach>

	</insert>

	<insert id="insertGoodsToOnLine" parameterType="java.util.List">

		<foreach collection="list" item="goods" index="index"
			separator=";">
			insert into hot_selling_goods (
			hot_selling_id,goods_pid,goods_name,show_name,goods_url,
			goods_img,goods_price,profit_margin,selling_price,goods_path)
			values
			(#{goods.hotSellingId},#{goods.goodsPid},#{goods.goodsName},
			#{goods.showName},#{goods.goodsUrl},#{goods.goodsImg},#{goods.goodsPrice},
			#{goods.profitMargin},#{goods.sellingPrice},#{goods.goodsPath})
		</foreach>

	</insert>

	<update id="updateInsertCategory">
		update hot_selling_category
		set insert_flag = '0'
		where insert_flag = '1'
	</update>

	<update id="updateInsertGoods">
		update hot_selling_goods
		set insert_flag = '0'
		where
		insert_flag = '1'
	</update>

	<update id="updateRelationship">
		update hot_selling_goods,hot_selling_category
		set
		hot_selling_goods.hot_selling_id = hot_selling_category.id
		where
		find_in_set(hot_selling_category.category_id,hot_selling_goods.goods_path)
		>0
		and hot_selling_goods.hot_selling_id=0;
	</update>

	<select id="queryFor1688Goods" resultMap="CustomGoodsBeanResultMap">
		select
		cbr.*,ifnull(c8g.name,'') as name from
		(
		select
		id,catid,catid1,pid,custom_main_image as img,
		localpath,remotpath,enname,price,wprice,isNewCloud
		from
		custom_benchmark_ready where pid =#{pid,jdbcType=VARCHAR} and valid
		=1
		UNION
		select id,catid,catid1,pid,custom_main_image as img,
		localpath,remotpath,enname,price,wprice,isNewCloud
		from
		custom_benchmark_ready_cloud

		where pid =#{pid,jdbcType=VARCHAR} and
		valid =1
		) cbr left join (select pid,name from custom_1688_goods where
		pid
		=#{pid,jdbcType=VARCHAR}) c8g
		on cbr.pid = c8g.pid
	</select>

	<select id="queryExistsGoodsCount" resultType="java.lang.Integer">
		select count(1)
		from hot_selling_goods
		where hot_selling_id =
		#{categoryId,jdbcType=INTEGER}
		and goods_pid =
		#{goodsPid,jdbcType=VARCHAR}
	</select>

	<insert id="insertHotGoodsUse">
		insert into hot_goods_use(goods_pid,category_id)
		select goods_pid,category_id from hot_selling_goods
		where goods_pid =
		#{goodsPid,jdbcType=VARCHAR}
		and not exists(select goods_pid from
		hot_goods_use where goods_pid = hot_selling_goods.goods_pid)
	</insert>

	<update id="useHotGoodsByState" parameterType="java.util.Map">
		<foreach collection="pidsMap.entrySet()" item="value" index="key"
			separator=";">
			update hot_selling_goods set is_on = #{value}
			where
			goods_pid = #{key}
		</foreach>
	</update>
	
	<delete id="deleteHotUseGoodsByPid">
		delete from hot_goods_use where goods_pid = #{goodsPid,jdbcType=VARCHAR}
	</delete>

</mapper>