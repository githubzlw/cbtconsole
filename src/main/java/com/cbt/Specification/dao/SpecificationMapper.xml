<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cbt.Specification.dao.SpecificationMapper">
	<resultMap id="SpecificationTranslationResultMap"
		type="com.cbt.Specification.bean.SpecificationTranslation">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="chName" property="chName" jdbcType="VARCHAR" />
		<result column="enName" property="enName" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="product_category_id" property="productCategoryId"
			jdbcType="VARCHAR" />
	</resultMap>

	<sql id="SpecificationTranslation_Column_List">
		id, chName, enName, type, product_category_id
	</sql>

	<select id="queryTranslationByCid" resultMap="SpecificationTranslationResultMap"
		parameterType="java.lang.String">
		select
		<include refid="SpecificationTranslation_Column_List" />
		from specification_translation
		where product_category_id =
		#{cid,jdbcType=VARCHAR}
		order by type,enName
	</select>
	
	<select id="queryPathByCid" resultType="java.lang.String"
		parameterType="java.lang.String">
		select path
		from ali_category
		where cid = #{cid,jdbcType=VARCHAR}
	</select>

	<select id="queryTranslationById" resultMap="SpecificationTranslationResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="SpecificationTranslation_Column_List" />
		from specification_translation
		where id = #{id,jdbcType=INTEGER}
	</select>

	<insert id="insertTranslation" parameterType="com.cbt.Specification.bean.SpecificationTranslation">
		insert into
		specification_translation(chName, enName, type, product_category_id)
		values(#{chName,jdbcType=VARCHAR},#{enName,jdbcType=VARCHAR},#{type,jdbcType=INTEGER},#{productCategoryId,jdbcType=VARCHAR})
	</insert>

	<update id="updateTranslation" parameterType="com.cbt.Specification.bean.SpecificationTranslation">
		update specification_translation
		<set>
			<if test="chName != null">
				chName =#{chName,jdbcType=VARCHAR},
			</if>
			<if test="enName != null">
				enName =#{enName,jdbcType=VARCHAR},
			</if>
			<if test="type != null and type !=0">
				type =#{type,jdbcType=INTEGER},
			</if>
		</set>
		where product_category_id =#{productCategoryId,jdbcType=VARCHAR}
		and id
		= #{id,jdbcType=INTEGER}
	</update>

	<delete id="deleteTranslation">
		delete from specification_translation
		where id = #{id,jdbcType=INTEGER}
	</delete>



	<resultMap id="SpecificationMappingResultMap"
		type="com.cbt.Specification.bean.SpecificationMapping">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="chName" property="chName" jdbcType="VARCHAR" />
		<result column="enName" property="enName" jdbcType="VARCHAR" />
		<result column="product_category_id" property="productCategoryId"
			jdbcType="VARCHAR" />
		<result column="specification_id" property="specificationId"
			jdbcType="INTEGER" />
	</resultMap>

	<sql id="SpecificationMapping_Column_List">
		id, chName, enName, product_category_id,specification_id
	</sql>

	<select id="queryMappingByTranslationId" resultMap="SpecificationMappingResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="SpecificationMapping_Column_List" />
		from specification_mapping
		where specification_id =
		#{translationId,jdbcType=INTEGER}
		order by enName
	</select>

	<select id="queryMappingById" resultMap="SpecificationMappingResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="SpecificationMapping_Column_List" />
		from specification_mapping
		where id = #{id,jdbcType=INTEGER}
	</select>

	<insert id="insertMapping" parameterType="com.cbt.Specification.bean.SpecificationMapping">
		insert into
		specification_mapping(chName, enName,
		product_category_id,specification_id)
		values(#{chName,jdbcType=VARCHAR},#{enName,jdbcType=VARCHAR},
		#{productCategoryId,jdbcType=VARCHAR},#{specificationId,jdbcType=INTEGER})
	</insert>

	<update id="updateMapping" parameterType="com.cbt.Specification.bean.SpecificationMapping">
		update specification_mapping
		<set>
			<if test="chName != null">
				chName =#{chName,jdbcType=VARCHAR},
			</if>
			<if test="enName != null">
				enName =#{enName,jdbcType=VARCHAR},
			</if>
		</set>
		where specification_id =#{specificationId,jdbcType=VARCHAR}
		and id =
		#{id,jdbcType=INTEGER}
	</update>

	<delete id="deleteMappingById" parameterType="java.lang.Integer">
		delete from
		specification_mapping
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<delete id="deleteMappingByTranslationId">
		delete from specification_mapping
		where specification_id = #{translationId,jdbcType=INTEGER}
	</delete>


	<resultMap id="AliCategoryResultMap" type="com.cbt.Specification.bean.AliCategory">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="cid" property="cid" jdbcType="VARCHAR" />
		<result column="path" property="path" jdbcType="VARCHAR" />
		<result column="category" property="category" jdbcType="VARCHAR" />
		<result column="time" property="time" jdbcType="VARCHAR" />
		<result column="lv" property="lv" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="AliCategory_Column_List">
		id, cid, path, category,time,lv
	</sql>

	<select id="queryAliCategoryByLvOne" resultMap="AliCategoryResultMap">
		select
		<include refid="AliCategory_Column_List" />
		from ali_category
		where lv =1
	</select>

	<select id="queryAliCategoryByCidAndLv" resultMap="AliCategoryResultMap">
		select
		<include refid="AliCategory_Column_List" />
		from ali_category
		where FIND_IN_SET(#{cid,jdbcType=VARCHAR},path)
		and lv
		=
		#{lv,jdbcType=INTEGER}
	</select>
	
	<select id="queryTranslationEnName" resultType="java.lang.String">
		select DISTINCT enName
		from specification_translation
		where 1=1 and ifnull(chName,'') = ''
		limit 0,5000
	</select>
	
	<update id="updateSpecificationByEnName">
		update specification_translation 
		set chName = #{chName,jdbcType=VARCHAR}
		where enName = #{enName,jdbcType=VARCHAR}
	</update>
	
	<select id="queryMappingEnName" resultType="java.lang.String">
		select DISTINCT enName
		from specification_mapping
		where 1=1 and ifnull(chName,'') = ''
		limit 0,5000
	</select>
	
	<update id="updateMappingByEnName">
		update specification_mapping 
		set chName = #{chName,jdbcType=VARCHAR}
		where enName = #{enName,jdbcType=VARCHAR}
	</update>

</mapper>