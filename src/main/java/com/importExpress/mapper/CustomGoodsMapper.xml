<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.importExpress.mapper.CustomGoodsMapper">


    <resultMap id="queryGoodsResultMap" type="com.cbt.bean.CustomGoodsPublish">
        <id column="id" property="id"/>
        <result column="keyword" property="keyword"/>
        <result column="catid" property="catid"/>
        <result column="catid1" property="catid1"/>
        <result column="pid" property="pid"/>
        <result column="enname" property="enname"/>
        <result column="remotpath" property="remotpath"/>
        <result column="localpath" property="localpath"/>
        <result column="publishtime" property="publishtime"/>
        <result column="admin_name" property="admin"/>
        <result column="admin_id" property="adminId"/>
        <result column="update_time" property="updatetime"/>
        <result column="name" property="name"/>
        <result column="img" property="img"/>
        <result column="custom_main_image" property="showMainImage"/>
        <result column="ali_pid" property="aliGoodsPid"/>
        <result column="ali_name" property="aliGoodsName"/>
        <result column="ali_img" property="aliGoodsImgUrl"/>
        <result column="valid" property="valid"/>
        <result column="goodsState" property="goodsState"/>
        <result column="is_edited" property="isEdited"/>
        <result column="isBenchmark" property="isBenchmark"/>
        <result column="is_abnormal" property="isAbnormal"/>
        <result column="bm_flag" property="bmFlag"/>
        <result column="source_pro_flag" property="sourceProFlag"/>
        <result column="sold_flag" property="soldFlag"/>
        <result column="is_sold_flag" property="isSoldFlag"/>
        <result column="priorityFlag" property="priorityFlag"/>
        <result column="is_add_car_flag" property="addCarFlag"/>
        <result column="source_used_flag" property="sourceUsedFlag"/>
        <result column="ocr_match_flag" property="ocrMatchFlag"/>
        <result column="rebid_flag" property="rebidFlag"/>
        <result column="infringing_flag" property="infringingFlag"/>
        <result column="shop_id" property="shopId"/>
        <result column="unsellableReason" property="unsellAbleReason"/>
        <result column="off_reason" property="offReason"/>
        <result column="click_num" property="clickNum"/>
        <result column="complain_id" property="complainId"/>
        <result column="reviewCount" property="reviewCount"/>
        <result column="from_flag" property="fromFlag"/>
        <result column="final_weight" property="finalWeight"/>
        <result column="max_price" property="maxPrice"/>
        <result column="weight" property="weight1688"/>
        <result column="weight_flag" property="weightFlag"/>
        
    </resultMap>


    <resultMap id="editGoodsResultMap" type="com.cbt.bean.CustomGoodsPublish">
        <result column="admin_name" property="admin"/>
        <result column="admin_id" property="adminId"/>
        <result column="wholesale_price" property="wholesalePrice"/>
        <result column="endetail" property="endetail"/>
        <result column="eninfo" property="eninfo"/>
        <result column="feeprice" property="feeprice"/>
        <result column="fprice" property="fprice"/>
        <result column="keyword" property="keyword"/>
        <result column="localpath" property="localpath"/>
        <result column="enname" property="enname"/>
        <result column="range_price" property="rangePrice"/>
        <result column="revise_weight" property="reviseWeight"/>
        <result column="final_weight" property="finalWeight"/>
        <result column="pid" property="pid"/>
        <result column="price" property="price"/>
        <result column="img" property="img"/>
        <result column="custom_main_image" property="showMainImage"/>
        <result column="sku" property="sku"/>
        <result column="entype" property="entype"/>
        <result column="remotpath" property="remotpath"/>
        <result column="ocrSizeInfo1" property="ocrSizeInfo1"/>
        <result column="ocrSizeInfo2" property="ocrSizeInfo2"/>
        <result column="ocrSizeInfo3" property="ocrSizeInfo3"/>
        <result column="wprice" property="wprice"/>
        <result column="ali_pid" property="aliGoodsPid"/>
        <result column="ali_price" property="aliGoodsPrice"/>
        <result column="update_time" property="updatetime"/>
        <result column="valid" property="valid"/>
        <result column="goodsState" property="goodsState"/>
        <result column="is_edited" property="isEdited"/>
        <result column="isBenchmark" property="isBenchmark"/>
        <result column="is_abnormal" property="isAbnormal"/>
        <result column="bm_flag" property="bmFlag"/>
        <result column="source_pro_flag" property="sourceProFlag"/>
        <result column="sold_flag" property="soldFlag"/>
        <result column="is_sold_flag" property="isSoldFlag"/>
        <result column="priorityFlag" property="priorityFlag"/>
        <result column="is_add_car_flag" property="addCarFlag"/>
        <result column="source_used_flag" property="sourceUsedFlag"/>
        <result column="ocr_match_flag" property="ocrMatchFlag"/>
        <result column="rebid_flag" property="rebidFlag"/>
        <result column="infringing_flag" property="infringingFlag"/>
        <result column="shop_id" property="shopId"/>
        <result column="publish_time" property="publishtime"/>
        <result column="catid1" property="catid1"/>
        <result column="infringing_flag" property="infringingFlag"/>
        <result column="sellunit" property="sellUnit"/>
        <result column="matchSource" property="matchSource"/>
        <result column="edit_profit" property="editProfit"/>
        <result column="lock_profit" property="lockProfit"/>
        <result column="unsellableReason" property="unsellAbleReason"/>
        <result column="off_reason" property="offReason"/>
        <result column="valid" property="valid"/>
        <result column="click_num" property="clickNum"/>
        <result column="weight_flag" property="weightNotFlag"/>
        <result column="ugly_flag" property="uglyFlag"/>
        <result column="repaired_flag" property="repairedFlag"/>
        <result column="weight_is_edit" property="weightIsEdit"/>
        <result column="promotion_flag" property="promotionFlag"/>
        <result column="fprice_str" property="fpriceStr"/>
        <result column="review_name" property="review_name"/>
        <result column="review_score" property="review_score"/>
        <result column="createtime" property="createtime"/>
        <result column="review_remark" property="review_remark"/>
        <result column="country" property="country"/>
        <result column="size_info_en" property="sizeInfoEn"/>
        <result column="from_flag" property="fromFlag"/>
        <result column="weight" property="weight1688"/>
        <result column="add_price_lv" property="addPriceLv"/>
        <result column="weight_flag" property="weightFlag"/>
        <result column="category_name" property="categoryName"/>
        <result column="describe_good_flag" property="describeGoodFlag"/>
        <result column="volume_weight" property="volumeWeight"/>
        <result column="path_catid" property="pathCatid"/>
        <result column="searchable" property="searchable"/>
    </resultMap>

    <resultMap id="categoryResultMap" type="com.cbt.bean.CategoryBean">
        <id column="id" property="id"/>
        <result column="cid" property="cid"/>
        <result column="path" property="path"/>
        <result column="category_name" property="categoryName"/>
        <result column="total" property="total"/>
        <result column="lv" property="lv"/>
    </resultMap>

    <resultMap id="goodsEditResultMap" type="com.importExpress.pojo.GoodsEditBean">
        <id column="id" property="id"/>
        <result column="pid" property="pid"/>
        <result column="old_title" property="old_title"/>
        <result column="new_title" property="new_title"/>
        <result column="admin_id" property="admin_id"/>
        <result column="admin_name" property="admin_name"/>
        <result column="weight_flag" property="weight_flag"/>
        <result column="ugly_flag" property="ugly_flag"/>
        <result column="repaired_flag" property="repaired_flag"/>
        <result column="benchmarking_flag" property="benchmarking_flag"/>
        <result column="describe_good_flag" property="describe_good_flag"/>
        <result column="never_off_flag" property="never_off_flag"/>
        <result column="publish_flag" property="publish_flag"/>
        <result column="create_time" property="create_time"/>
        <result column="off_time" property="off_time"/>
        <result column="publish_time" property="publish_time"/>
        <result column="price_1688" property="price_1688"/>
        <result column="search_num" property="search_num"/>
        <result column="click_num" property="click_num"/>

        <result column="price_old" property="price_old"/>
        <result column="wprice_old" property="wprice_old"/>
        <result column="feeprice_old" property="feeprice_old"/>
        <result column="range_price_old" property="range_price_old"/>
        <result column="weight_old" property="weight_old"/>
        <result column="revise_weight_old" property="revise_weight_old"/>
        <result column="final_weight_old" property="final_weight_old"/>
        <result column="fprice_str_old" property="fprice_str_old"/>

        <result column="price_new" property="price_new"/>
        <result column="wprice_new" property="wprice_new"/>
        <result column="feeprice_new" property="feeprice_new"/>
        <result column="range_price_new" property="range_price_new"/>
        <result column="weight_new" property="weight_new"/>
        <result column="revise_weight_new" property="revise_weight_new"/>
        <result column="final_weight_new" property="final_weight_new"/>
        <result column="fprice_str_new" property="fprice_str_new"/>
    </resultMap>


    <resultMap id="goodsParseResultMap" type="com.importExpress.pojo.GoodsParseBean">
        <result column="pid" property="pid"/>
        <result column="ali_pid" property="ali_pid"/>
        <result column="ali_price" property="ali_price"/>
        <result column="ali_weight" property="ali_weight"/>
        <result column="wholesale_price" property="wholesale_price"/>
        <result column="weight" property="weight_1688"/>
        <result column="eninfo" property="enInfo"/>
        <result column="remotpath" property="remotePath"/>
        <result column="catid1" property="catid1"/>
    </resultMap>


    <resultMap id="onlineGoodsCheckResultMap" type="com.importExpress.pojo.OnlineGoodsCheck">
        <result column="pid" property="pid"/>
        <result column="shop_id" property="shopId"/>
        <result column="catid1" property="catid"/>
        <result column="category_name" property="categoryName"/>
        <result column="remotpath" property="remotePath"/>
        <result column="custom_main_image" property="mainImg"/>
        <result column="img" property="imgs"/>
        <result column="eninfo" property="eninfo"/>
        <result column="click_num" property="clickNum"/>
    </resultMap>

    <resultMap id="goodsMd5BeanResultMap" type="com.importExpress.pojo.GoodsMd5Bean">
        <result column="pid" property="pid"/>
        <result column="shop_id" property="shopId"/>
        <result column="local_path" property="localPath"/>
        <result column="remote_path" property="remotePath"/>
        <result column="goods_md5" property="goodsMd5"/>
    </resultMap>

    <resultMap id="shopMd5BeanResultMap" type="com.importExpress.pojo.ShopMd5Bean">
        <result column="shop_id" property="shopId"/>
        <result column="pid" property="pid"/>
        <result column="shop_name" property="shopName"/>
        <result column="goods_md5" property="md5Val"/>
        <result column="remote_path" property="md5Img"/>
        <result column="md5_num" property="md5Num"/>
        <result column="is_delete" property="isDelete"/>
    </resultMap>


    <resultMap id="goodsMd5DeatilsResultMap" type="com.importExpress.pojo.GoodsMd5Bean">
        <id column="id" property="id"/>
        <result column="pid" property="pid"/>
        <result column="valid" property="valid"/>
        <result column="shop_id" property="shopId"/>
        <result column="goods_md5" property="goodsMd5"/>
        <result column="remote_path" property="remotePath"/>
        <result column="local_path" property="localPath"/>
    </resultMap>

    <insert id="insertPidIsEdited">
        insert into custom_goods_edit(pid,shop_id,admin_id)
        values(#{pid},#{shopId},#{adminId})
    </insert>

    <select id="checkIsEditedByPid" resultType="java.lang.Integer">
        select count(0) from custom_goods_edit where pid = #{pid}
    </select>

    <update id="updatePidIsEdited" parameterType="com.importExpress.pojo.GoodsEditBean">
        update custom_goods_edit a,custom_benchmark_ready b
        set a.admin_id =#{admin_id},a.update_count = a.update_count + 1
        <if test="weight_flag > 0">
            ,a.weight_flag = #{weight_flag}
        </if>
        <if test="ugly_flag > 0">
            ,a.ugly_flag = #{ugly_flag}
        </if>
        <if test="benchmarking_flag > 0">
            ,a.benchmarking_flag = #{benchmarking_flag}
        </if>
        <if test="benchmarking_flag == 1">
            ,b.isBenchmark = 0,b.bm_flag = 1
        </if>
        <if test="describe_good_flag > 0">
            ,a.describe_good_flag = #{describe_good_flag}
        </if>
        <if test="uniqueness_flag > 0">
            ,a.uniqueness_flag = #{uniqueness_flag}
        </if>
        <if test="never_off_flag > 0">
            ,a.never_off_flag = #{never_off_flag}
        </if>
        <if test="publish_flag > 0">
            ,a.publish_flag = #{publish_flag}
        </if>
        <if test="is_edited > 0">
            ,a.is_edited = #{is_edited}
        </if>
        <if test="publish_flag > 0">
            ,a.publish_time = now()
        </if>
        <if test="off_flag > 0">
            ,a.off_time = now()
        </if>
        <if test="weight_is_edit > 0">
            ,a.weight_is_edit = #{weight_is_edit}
        </if>
        <if test="repaired_flag > 0">
            ,a.repaired_flag = #{repaired_flag}
        </if>
        <if test="promotion_flag > 0">
            ,b.promotion_flag = #{promotion_flag}
        </if>
        where a.pid = b.pid and a.pid = #{pid}
    </update>

    <select id="queryTypeinGoodsTotal" resultType="java.lang.Integer">
        select count(0) from custom_benchmark_ready where admin_id = #{adminId}
        <if test="valid == 0">
            and valid = 1
        </if>
        <if test="valid > 0">
            and valid = #{valid}
        </if>
    </select>

    <select id="queryOnlineGoodsTotal" resultType="java.lang.Integer">
        select count(0) from custom_benchmark_ready where 1=1
        <if test="valid == 0">
            and valid = 1
        </if>
        <if test="valid > 0">
            and valid = #{valid}
        </if>
    </select>

    <select id="queryIsEditOnlineGoodsTotal" resultType="java.lang.Integer">
        select count(0) from custom_goods_edit cge,custom_benchmark_ready cbr
        where cge.pid = cbr.pid and cge.admin_id = #{adminId}
        and cge.is_edited > 0
        <if test="valid == 0">
            and cbr.valid = 1
        </if>
        <if test="valid > 0">
            and cbr.valid = #{valid}
        </if>
    </select>

    <update id="saveBenchmarking">
        update custom_benchmark_ready set ali_pid = #{aliPid},ali_price = #{aliPrice},matchSource=4
        where pid = #{pid}
    </update>

    <!-- List<String> queryStaticizeList(@Param("catid") String catid); -->
    <select id="queryStaticizeList" resultType="String">
        SELECT CONCAT(pid, '@', create_time, '@', item_static_file) url
        FROM staticize_goods_html_sel
        <if test="catid != 0">
            WHERE catid1 IN (
            SELECT
            category_id
            FROM
            1688_category
            WHERE
            find_in_set(#{catid}, path)
            )
        </if>
        <if test="catid == 0">
            WHERE catid1 is not null
        </if>
    </select>

    <insert id="insertIntoGoodsEditBean" parameterType="com.importExpress.pojo.GoodsEditBean">
        insert into custom_goods_edited_log(pid,old_title,new_title,admin_id,weight_flag,ugly_flag,
          benchmarking_flag,describe_good_flag,never_off_flag,publish_flag,repaired_flag,promotion_flag)
        values(#{pid},#{old_title},#{new_title},#{admin_id},#{weight_flag},#{ugly_flag},
          #{benchmarking_flag},#{describe_good_flag},#{never_off_flag},#{publish_flag},#{repaired_flag},#{promotion_flag})
    </insert>


    <insert id="insertIntoGoodsPriceOrWeight" parameterType="com.importExpress.pojo.GoodsEditBean">
        insert into custom_goods_edited_log(pid,admin_id,price_old,wprice_old,feeprice_old,range_price_old,weight_old,revise_weight_old,final_weight_old
        ,price_new,wprice_new,feeprice_new,range_price_new,weight_new,revise_weight_new,final_weight_new)
        values(#{pid},#{admin_id},#{price_old},#{wprice_old},#{feeprice_old},#{range_price_old},#{weight_old},#{revise_weight_old},#{final_weight_old},
        #{price_new},#{wprice_new},#{feeprice_new},#{range_price_new},#{weight_new},#{revise_weight_new},#{final_weight_new})
    </insert>

    <select id="queryGoodsEditBean" parameterType="com.importExpress.pojo.GoodsEditBean" resultMap="goodsEditResultMap">
        select a.id,a.pid,a.old_title,a.new_title,a.admin_id,b.admName as admin_name,a.weight_flag,a.ugly_flag,
        a.benchmarking_flag,a.describe_good_flag,a.never_off_flag,a.publish_flag,a.repaired_flag,
        DATE_FORMAT(a.create_time,'%Y-%m-%d %H:%i:%S') as create_time,
        a.price_old,a.wprice_old,a.feeprice_old,a.range_price_old,a.weight_old,a.revise_weight_old,a.final_weight_old,a.fprice_str_old,
        a.price_new,a.wprice_new,a.feeprice_new,a.range_price_new,a.weight_new,a.revise_weight_new,a.final_weight_new,a.fprice_str_new
        from custom_goods_edited_log a left join admuser b
        on a.admin_id = b.id
        where 1=1
        <if test="pid != null">
            and pid =#{pid}
        </if>
        <if test="admin_id > 0">
            and a.admin_id =#{admin_id}
        </if>
        <if test="weight_flag > 0">
            and a.weight_flag =#{weight_flag}
        </if>
        <if test="ugly_flag > 0">
            and a.ugly_flag =#{ugly_flag}
        </if>
        <if test="repaired_flag > 0">
            and a.repaired_flag =#{repaired_flag}
        </if>
        <if test="benchmarking_flag > 0">
            and a.benchmarking_flag =#{benchmarking_flag}
        </if>
        order by create_time desc
        <if test="limitNum > 0">
            limit #{startNum},#{limitNum}
        </if>
    </select>


    <select id="queryGoodsEditBeanCount" parameterType="com.importExpress.pojo.GoodsEditBean"
            resultType="java.lang.Integer">
        select count(0)
        from custom_goods_edited_log a left join admuser b
        on a.admin_id = b.id
        where 1=1
        <if test="pid != null">
            and pid =#{pid}
        </if>
        <if test="admin_id > 0">
            and a.admin_id =#{admin_id}
        </if>
        <if test="weight_flag > 0">
            and a.weight_flag =#{weight_flag}
        </if>
        <if test="ugly_flag > 0">
            and a.ugly_flag =#{ugly_flag}
        </if>
        <if test="repaired_flag > 0">
            and a.repaired_flag =#{repaired_flag}
        </if>
        <if test="benchmarking_flag > 0">
            and a.benchmarking_flag =#{benchmarking_flag}
        </if>
    </select>

    <select id="queryForListByParam" parameterType="com.cbt.bean.CustomGoodsQuery" resultMap="queryGoodsResultMap">
        select
        cbu.keyword,cbu.catid1,cbu.pid,cbu.enname,cbu.localpath,cbu.remotpath,cbu.goodsstate,cbu.custom_main_image,
        cbu.ali_name,cbu.ali_img,cbu.ali_pid,cbu.valid,cbu.name,cbu.from_flag,cbu.final_weight,cbu.max_price,cbu.weight_flag,
        cbu.bm_flag,cbu.isBenchmark,cbu.source_pro_flag,cbu.source_used_flag,cbu.ocr_match_flag,cbu.unsellableReason,
        ifnull(cge.infringing_flag,0) as infringing_flag,cbu.priority_flag,ifnull(cge.rebid_flag,0) as rebid_flag,
        ifnull(cge.update_time,'') as update_time,ifnull(cge.publish_time,'') as publish_time,ifnull(adu.admName,'') as
        admin_name,
        ifnull(adu.id,0) as admin_id,ifnull(cge.is_edited,0) as is_edited,cbu.is_sold_flag,cbu.weight,
        cbu.is_add_car_flag,ifnull(cge.is_abnormal,0) as is_abnormal,ifnull(cge.off_reason,'') as off_reason,
        ifnull(cge.click_num,0) as click_num,
        ifnull(cbc.complain_id,'') as complain_id,
        (select count(0) from goods_review where goods_pid = cbu.pid) as reviewCount
        from custom_benchmark_ready cbu
        <if test="catid !=null">
            inner join (select category_id from 1688_category where find_in_set(#{catid},path)) ct on cbu.catid1 = ct.category_id
        </if>
        left join custom_goods_edit cge on cbu.pid = cge.pid
        left join custom_benchmark_complain cbc on cbc.pid = cge.pid
        left join (select id,admName from admuser where status =1) adu on cge.admin_id = adu.id
        where 1=1

        <if test="unsellableReason !=null">
            and cbu.unsellableReason=${unsellableReason}
        </if>
        <if test="sttime !=null">
            and cge.publish_time &gt;= #{sttime}
        </if>
        <if test="edtime !=null">
            and cge.publish_time &lt;= #{edtime}
        </if>
        <if test="state == 2">
            and (cbu.valid = 0 or cbu.valid = 2)
        </if>
        <if test="state == 3 or state == 5">
            and cbu.goodsstate = #{state}
        </if>
        <if test="state == 4">
            and cbu.valid = 1
        </if>
        <if test="state == 6">
            and cbu.valid = 2
        </if>
        <if test="adminId > 0">
            and cge.admin_id = #{adminId}
        </if>
        <if test="isEdited > -1">
            and cge.is_edited = #{isEdited}
        </if>
        <if test="isAbnormal > -1">
            and cge.is_abnormal = #{isAbnormal}
        </if>
        <if test="isBenchmark == 1">
            and cbu.isBenchmark = 1 and cbu.bm_flag=1
        </if>
        <if test="isBenchmark > -1 and isBenchmark != 1">
            and cbu.isBenchmark = #{isBenchmark}
        </if>
        <if test="weightCheck > -1">
            and cge.weight_check = #{weightCheck}
        </if>
        <if test="bmFlag > 0">
            and cbu.bm_flag = #{bmFlag}
        </if>
        <if test="sourceProFlag > 0">
            and cbu.source_pro_flag = #{sourceProFlag}
        </if>
        <if test="soldFlag > -1">
            and cbu.sold_flag = #{soldFlag}
        </if>
        <if test="priorityFlag > 0">
            and cbu.priority_flag = #{priorityFlag}
        </if>
        <if test="addCarFlag > 0">
            and cbu.is_add_car_flag = #{addCarFlag}
        </if>
        <if test="sourceUsedFlag > -1">
            and cbu.source_used_flag = #{sourceUsedFlag}
        </if>
        <if test="ocrMatchFlag > 0">
            and cbu.ocr_match_flag = #{ocrMatchFlag}
        </if>
        <if test="rebidFlag > 0">
            and cge.rebid_flag = #{rebidFlag}
        </if>
        <if test="infringingFlag > -1">
            and cge.infringing_flag = #{infringingFlag}
        </if>

        <if test="aliWeightBegin > 0">
            and cbu.ali_price &gt;= #{aliWeightBegin}
        </if>
        <if test="aliWeightEnd > 0">
            and cbu.ali_price &lt;= #{aliWeightEnd}
        </if>
        <if test="onlineTime != null">
            and cge.publish_time &gt;= #{onlineTime}
        </if>
        <if test="offlineTime != null">
            and cge.off_time &gt;= #{offlineTime}
        </if>
        <if test="editBeginTime != null">
            and cge.update_time &gt;= #{editBeginTime}
        </if>
        <if test="editEndTime != null">
            and cge.update_time &lt;= #{editEndTime}
        </if>
        <if test="weight1688Begin > 0">
            and cbu.weight &gt;= #{weight1688Begin}
        </if>
        <if test="weight1688End > 0">
            and cbu.weight &lt;= #{weight1688End}
        </if>
        <if test="price1688Begin > 0">
            and cge.price_1688 &gt;= #{price1688Begin}
        </if>
        <if test="price1688End > 0">
            and cge.price_1688 &lt;= #{price1688End}
        </if>
        <if test="isSort == 3">
            and cge.click_num > 0
        </if>
        <if test="isComplain == 1">
            and cbc.complain_count > 0
        </if>
        <if test="fromFlag > -1">
            and cbu.from_flag = #{fromFlag}
        </if>

        <if test="finalWeightBegin > 0">
            and cbu.final_weight &gt;= #{finalWeightBegin}
        </if>
        <if test="finalWeightEnd > 0">
            and cbu.final_weight &lt;= #{finalWeightEnd}
        </if>
        <if test="minPrice > 0">
            and cbu.max_price &gt;= #{minPrice}
        </if>
        <if test="maxPrice > 0">
            and cbu.max_price &lt;= #{maxPrice}
        </if>
        <if test="isSoldFlag == 0">
            and cbu.is_sold_flag = 0
        </if>
        <if test="isSoldFlag > 0">
            and cbu.is_sold_flag &gt; 0
        </if>
        <if test="isWeigthZero == 1">
            and (cbu.weight = '' or cbu.weight is null or cbu.weight = '0' or cbu.weight = '0.0' or cbu.weight = '0.00')
        </if>
        <if test="isWeigthCatid == 1">
            and cbu.weight_flag = 1
        </if>

        <if test="qrCatid !=null">
            and cbu.catid1 = #{qrCatid}
        </if>
        <if test="shopId !=null">
            and cbu.shop_id = #{shopId}
        </if>
        <if test="chKeyWord !=null">
            and MATCH(cbu.name) AGAINST(concat('*',#{chKeyWord},'*') IN BOOLEAN MODE)
        </if>

        <if test="isSort == 1">
            order by cge.search_num desc
        </if>
        <if test="isSort == 2">
            order by cge.click_num desc
        </if>
        <if test="isSort == 3">
            order by cge.click_num desc
        </if>
        <if test="isSort == 4">
            order by cbu.catid1
        </if>

        limit #{page},50
    </select>

    <select id="queryForListByParamCount" parameterType="com.cbt.bean.CustomGoodsQuery" resultType="java.lang.Integer">
        select count(0) from custom_benchmark_ready cbu
        <if test="catid !=null">
            inner join (select category_id from 1688_category where find_in_set(#{catid},path)) ct on cbu.catid1 = ct.category_id
        </if>
        left join custom_goods_edit cge on cbu.pid = cge.pid
        left join (select id,admName from admuser where status =1) adu on cge.admin_id = adu.id
        where 1=1
        <if test="sttime !=null">
            and cge.publish_time &gt;= #{sttime}
        </if>
        <if test="unsellableReason !=null">
            and cbu.unsellableReason=${unsellableReason}
        </if>
        <if test="edtime !=null">
            and cge.publish_time &lt;= #{edtime}
        </if>
        <if test="state == 2">
            and (cbu.valid = 0 or cbu.valid = 2)
        </if>
        <if test="state == 3 or state == 5">
            and cbu.goodsstate = #{state}
        </if>
        <if test="state == 4">
            and cbu.valid = 1
        </if>
        <if test="state == 6">
            and cbu.valid = 2
        </if>
        <if test="valid != -1">
            and cbu.valid = #{valid}
        </if>
        <if test="adminId > 0">
            and cge.admin_id = #{adminId}
        </if>
        <if test="isEdited > -1">
            and cge.is_edited = #{isEdited}
        </if>
        <if test="isAbnormal > -1">
            and cge.is_abnormal = #{isAbnormal}
        </if>
        <if test="isBenchmark == 1">
            and cbu.isBenchmark = 1 and cbu.bm_flag=1
        </if>
        <if test="isBenchmark > -1 and isBenchmark != 1">
            and cbu.isBenchmark = #{isBenchmark}
        </if>
        <if test="weightCheck > -1">
            and cge.weight_check = #{weightCheck}
        </if>
        <if test="bmFlag > 0">
            and cbu.bm_flag = #{bmFlag}
        </if>
        <if test="sourceProFlag > 0">
            and cbu.source_pro_flag = #{sourceProFlag}
        </if>
        <if test="soldFlag > -1">
            and cbu.sold_flag = #{soldFlag}
        </if>
        <if test="priorityFlag > 0">
            and cbu.priority_flag = #{priorityFlag}
        </if>
        <if test="addCarFlag > 0">
            and cbu.is_add_car_flag = #{addCarFlag}
        </if>
        <if test="sourceUsedFlag > -1">
            and cbu.source_used_flag = #{sourceUsedFlag}
        </if>
        <if test="ocrMatchFlag > 0">
            and cbu.ocr_match_flag = #{ocrMatchFlag}
        </if>
        <if test="rebidFlag > 0">
            and cge.rebid_flag = #{rebidFlag}
        </if>
        <if test="infringingFlag > -1">
            and cge.infringing_flag = #{infringingFlag}
        </if>
        <if test="aliWeightBegin > 0">
            and cbu.ali_price &gt;= #{aliWeightBegin}
        </if>
        <if test="aliWeightEnd > 0">
            and cbu.ali_price &lt;= #{aliWeightEnd}
        </if>
        <if test="onlineTime != null">
            and cge.publish_time &gt;= #{onlineTime}
        </if>
        <if test="offlineTime != null">
            and cge.off_time &gt;= #{offlineTime}
        </if>
        <if test="editBeginTime != null">
            and cge.update_time &gt;= #{editBeginTime}
        </if>
        <if test="editEndTime != null">
            and cge.update_time &lt;= #{editEndTime}
        </if>
        <if test="weight1688Begin > 0">
            and cbu.weight &gt;= #{weight1688Begin}
        </if>
        <if test="weight1688End > 0">
            and cbu.weight &lt;= #{weight1688End}
        </if>
        <if test="price1688Begin > 0">
            and cge.price_1688 &gt;= #{price1688Begin}
        </if>
        <if test="price1688End > 0">
            and cge.price_1688 &lt;= #{price1688End}
        </if>
        <if test="isSort == 3">
            and cge.click_num > 0
        </if>
        <if test="isComplain == 1">
            and cbc.complain_count > 0
        </if>
        <if test="fromFlag > -1">
            and cbu.from_flag = #{fromFlag}
        </if>
        <if test="finalWeightBegin > 0">
            and cbu.final_weight &gt;= #{finalWeightBegin}
        </if>
        <if test="finalWeightEnd > 0">
            and cbu.final_weight &lt;= #{finalWeightEnd}
        </if>
        <if test="minPrice > 0">
            and cbu.max_price &gt;= #{minPrice}
        </if>
        <if test="maxPrice > 0">
            and cbu.max_price &lt;= #{maxPrice}
        </if>
        <if test="isSoldFlag == 0">
            and cbu.is_sold_flag = 0
        </if>
        <if test="isSoldFlag > 0">
            and cbu.is_sold_flag &gt; 0
        </if>
        <if test="isWeigthZero == 1">
            and (cbu.weight = '' or cbu.weight is null or cbu.weight = '0' or cbu.weight = '0.0' or cbu.weight = '0.00')
        </if>
        <if test="isWeigthCatid == 1">
            and cbu.weight_flag = 1
        </if>
        <if test="qrCatid !=null">
            and cbu.catid1 = #{qrCatid}
        </if>
        <if test="shopId !=null">
            and cbu.shop_id = #{shopId}
        </if>
        <if test="chKeyWord !=null">
            and MATCH(cbu.name) AGAINST(concat('*',#{chKeyWord},'*') IN BOOLEAN MODE)
        </if>
    </select>

    <select id="queryCategoryByParam" resultMap="categoryResultMap" parameterType="com.cbt.bean.CustomGoodsQuery">
        select cat1688.*,ifnull(cbm.total,0) as total from (select category_id as cid,name as category_name,
        path,lv from 1688_category where lv > 0) cat1688 left join
        (select catid1,count(0) as total from custom_benchmark_ready cbu
        <if test="catid !=null">
            inner join (select category_id from 1688_category where find_in_set(#{catid},path)) ct on cbu.catid1 = ct.category_id
        </if>
        left join custom_goods_edit cge on cbu.pid = cge.pid
        left join (select id,admName from admuser where status =1) adu on cge.admin_id = adu.id
        where 1=1
        <if test="sttime !=null">
            and cge.publish_time &gt;= #{sttime}
        </if>
        <if test="edtime !=null">
            and cge.publish_time &lt;= #{edtime}
        </if>
        <if test="state == 2">
            and (cbu.valid = 0 or cbu.valid = 2)
        </if>
        <if test="state == 3 or state == 5">
            and cbu.goodsstate = #{state}
        </if>
        <if test="state == 4">
            and cbu.valid = 1
        </if>
        <if test="state == 6">
            and cbu.valid = 2
        </if>
        <if test="valid != -1">
            and cbu.valid = #{valid}
        </if>
        <if test="adminId > 0">
            and cge.admin_id = #{adminId}
        </if>
        <if test="isEdited > -1">
            and cge.is_edited = #{isEdited}
        </if>
        <if test="isAbnormal > -1">
            and cge.is_abnormal = #{isAbnormal}
        </if>
        <if test="isBenchmark == 1">
            and cbu.isBenchmark = 1 and cbu.bm_flag=1
        </if>
        <if test="isBenchmark > -1 and isBenchmark != 1">
            and cbu.isBenchmark = #{isBenchmark}
        </if>
        <if test="weightCheck > -1">
            and cge.weight_check = #{weightCheck}
        </if>
        <if test="bmFlag > 0">
            and cbu.bm_flag = #{bmFlag}
        </if>
        <if test="sourceProFlag > 0">
            and cbu.source_pro_flag = #{sourceProFlag}
        </if>
        <if test="soldFlag > -1">
            and cbu.sold_flag = #{soldFlag}
        </if>
        <if test="priorityFlag > 0">
            and cbu.priority_flag = #{priorityFlag}
        </if>
        <if test="addCarFlag > 0">
            and cbu.is_add_car_flag = #{addCarFlag}
        </if>
        <if test="sourceUsedFlag > -1">
            and cbu.source_used_flag = #{sourceUsedFlag}
        </if>
        <if test="ocrMatchFlag > 0">
            and cbu.ocr_match_flag = #{ocrMatchFlag}
        </if>
        <if test="rebidFlag > 0">
            and cge.rebid_flag = #{rebidFlag}
        </if>
        <if test="infringingFlag > -1">
            and cge.infringing_flag = #{infringingFlag}
        </if>
        <if test="aliWeightBegin > 0">
            and cbu.ali_price &gt;= #{aliWeightBegin}
        </if>
        <if test="aliWeightEnd > 0">
            and cbu.ali_price &lt;= #{aliWeightEnd}
        </if>
        <if test="onlineTime != null">
            and cge.publish_time &gt;= #{onlineTime}
        </if>
        <if test="offlineTime != null">
            and cge.off_time &gt;= #{offlineTime}
        </if>
        <if test="editBeginTime != null">
            and cge.update_time &gt;= #{editBeginTime}
        </if>
        <if test="editEndTime != null">
            and cge.update_time &lt;= #{editEndTime}
        </if>
        <if test="weight1688Begin > 0">
            and cbu.weight &gt;= #{weight1688Begin}
        </if>
        <if test="weight1688End > 0">
            and cbu.weight &lt;= #{weight1688End}
        </if>
        <if test="price1688Begin > 0">
            and cge.price_1688 &gt;= #{price1688Begin}
        </if>
        <if test="price1688End > 0">
            and cge.price_1688 &lt;= #{price1688End}
        </if>
        <if test="isComplain == 1">
            and cbc.complain_count > 0
        </if>
        <if test="fromFlag > -1">
            and cbu.from_flag = #{fromFlag}
        </if>
        <if test="finalWeightBegin > 0">
            and cbu.final_weight &gt;= #{finalWeightBegin}
        </if>
        <if test="finalWeightEnd > 0">
            and cbu.final_weight &lt;= #{finalWeightEnd}
        </if>
        <if test="minPrice > 0">
            and cbu.max_price &gt;= #{minPrice}
        </if>
        <if test="maxPrice > 0">
            and cbu.max_price &lt;= #{maxPrice}
        </if>
        <if test="isSoldFlag == 0">
            and cbu.is_sold_flag = 0
        </if>
        <if test="isSoldFlag > 0">
            and cbu.is_sold_flag &gt; 0
        </if>
        <if test="isWeigthZero == 1">
            and (cbu.weight = '' or cbu.weight is null or cbu.weight = '0' or cbu.weight = '0.0' or cbu.weight = '0.00')
        </if>
        <if test="isWeigthCatid == 1">
            and cbu.weight_flag = 1
        </if>
        <if test="qrCatid !=null">
            and cbu.catid1 = #{qrCatid}
        </if>
        <if test="shopId !=null">
            and cbu.shop_id = #{shopId}
        </if>
        <if test="chKeyWord !=null">
            and MATCH(cbu.name) AGAINST(concat('*',#{chKeyWord},'*') IN BOOLEAN MODE)
        </if>
        group by catid1
        ) cbm on cat1688.cid=cbm.catid1 order by cat1688.lv,cat1688.category_name asc
    </select>


    <select id="queryGoodsDetailsByPid" resultMap="editGoodsResultMap">
        select cbu.pid,cbu.enname,cbu.category_name,cbu.endetail,cbu.eninfo,cbu.feeprice,cbu.fprice,cbu.wholesale_price,cbu.add_price_lv,
        cbu.keyword,cbu.custom_main_image,cbu.price,cbu.final_weight,cbu.wprice,cbu.entype,cbu.sku,cbu.weight_flag,cbu.path_catid,
        cbu.goodsstate,cbu.bm_flag,cbu.valid,cbu.isBenchmark,cbu.source_pro_flag,cbu.source_used_flag,cbu.volume_weight,
        cbu.ocr_match_flag,cbu.priority_flag,cbu.img,cbu.range_price,cbu.revise_weight,cbu.localpath,cbu.remotpath,
        cbu.is_sold_flag,cbu.is_add_car_flag,cbu.ali_pid,cbu.unsellableReason,cbu.size_info_en,cbu.from_flag,cbu.weight,
        ifnull(adu.id,0) as admin_id,cbu.shop_id,cbu.catid1,cbu.sellunit,cbu.promotion_flag,cbu.fprice_str,cbu.searchable,
        ifnull(cbn.ocrcontent1,'') as ocrSizeInfo1,ifnull(cbn.ocrcontent2,'') as ocrSizeInfo2,ifnull(cbn.ocrcontent3,'') as ocrSizeInfo3,
        cbu.ali_price,cbu.matchSource,ifnull(cge.infringing_flag,0) as infringing_flag,ifnull(cge.rebid_flag,0) as rebid_flag,
        ifnull(cge.update_time,'') as update_time,ifnull(cge.publish_time,'') as publish_time,ifnull(adu.admName,'') as admin_name,
        ifnull(cge.is_edited,0) as is_edited,ifnull(cge.is_abnormal,0) as is_abnormal,ifnull(cge.edit_profit,0) as edit_profit,
        ifnull(cge.lock_profit,0) as lock_profit,ifnull(cge.off_reason,'') as off_reason,ifnull(cge.weight_flag,0) as weight_flag,
        ifnull(cge.ugly_flag,0) as ugly_flag,ifnull(cge.repaired_flag,0) as repaired_flag,ifnull(cge.click_num,0) as click_num,
        ifnull(cge.weight_is_edit,0) as weight_is_edit, ifnull(cge.describe_good_flag,0) as describe_good_flag
        from custom_benchmark_ready cbu
        left join custom_goods_edit cge on cbu.pid = cge.pid
        left join (select id,admName from admuser where status =1) adu on cge.admin_id = adu.id
        left join needfindsizechart cbn on cbn.pid=cbu.pid
        where cbu.pid = #{pid}
    </select>
    <select id="getAllReviewByPid" resultType="com.cbt.bean.CustomGoodsPublish">
        select id as aliId,review_name,createtime,country,review_remark,review_score,goods_pid,updatetime,CASE WHEN type=1 THEN '客户评论' ELSE '运营评论' END as type,CASE WHEN review_flag=1 THEN '不显示' ELSE '显示' END as review_flag
        from  goods_review WHERE goods_pid=#{pid}
    </select>
    <select id="queryMaxIdFromCustomGoods" resultType="java.lang.Integer">
        select max(id) from custom_benchmark_ready where 1=1
    </select>
    <update id="updateReviewRemark">
        update goods_review set review_remark=#{map.edit_remark},country=#{map.editcountry},review_score=#{map.edit_score},
        review_flag=#{map.update_flag},updatetime=now() where id = #{map.id}
    </update>
    <select id="queryCustomGoodsByLimit" resultMap="goodsParseResultMap">
        select pid,ali_pid,ali_price,weight,wholesale_price,ali_weight,enInfo,remotpath,catid1
        from custom_benchmark_ready
        where id &gt; #{minId} and id &lt;= #{maxId}
    </select>

    <update id="updateCustomGoodsStatistic" parameterType="com.importExpress.pojo.GoodsParseBean">
        update custom_goods_edit a,custom_benchmark_ready b
        set a.price_1688 = #{price_1688},
        b.weight = #{weight_1688}
        <if test="aliUpdate == 1">
            ,b.ali_weight = #{ali_weight}
        </if>
        <if test="aliUpdate == 2">
            ,b.ali_weight = #{ali_weight}
            ,b.ali_price = #{ali_price}
        </if>
        where a.pid = b.pid and a.pid = #{pid}
    </update>

    <select id="checkIsExistsGoods" resultType="java.lang.Integer">
        select count(0) from custom_goods_edit where pid = #{pid}
    </select>

    <insert id="insertCustomGoodsStatistic" parameterType="com.importExpress.pojo.GoodsParseBean">
        insert into custom_goods_edit(pid)
        values(#{pid})
    </insert>

    <update id="updateGoodsSearchNum">
        update custom_goods_edit set search_num = (select count(0) from searchproductlog where MATCH(productShowIdList) AGAINST(#{pid}))
        where pid = #{pid}
    </update>

    <update id="updateGoodsClickNum">
        update custom_goods_edit a,(select pid,count(pid) as total from searchclickproductlog GROUP BY pid) b
        set a.click_num = b.total where a.pid = b.pid
    </update>


    <update id="updateGoodsWeightByPid">
        update custom_goods_edit a,custom_benchmark_ready b
        set b.revise_weight=#{newWeight},b.final_weight=#{newWeight},b.source_pro_flag = 7,b.weight_flag = 0,
        a.weight_is_edit = #{weightIsEdit},a.old_weight = #{oldWeight},a.price_is_edit = 0
        ,b.weight = case when (b.weight = '' or b.weight is null or b.weight = '0' or b.weight = '0.0') then #{newWeight} else b.weight end
        where a.pid = b.pid and  b.pid = #{pid}
    </update>

    <update id="updateGoodsDetailsByInfo" parameterType="com.cbt.bean.CustomGoodsPublish">
        update custom_goods_edit a,custom_benchmark_ready b
        set b.enname = #{enname},b.img = #{img},b.endetail = #{endetail},
        b.eninfo=#{eninfo},b.goodsstate=#{goodsState},b.keyword=#{keyword},a.admin_id = #{adminId},
        bm_flag=1,a.update_count = a.update_count + 1 ,b.fprice_str=#{fpriceStr},b.size_info_en=#{sizeInfoEn}
        <if test="rangePrice != null">
            ,b.range_price=#{rangePrice},b.sku=#{sku}
        </if>
        <if test="feeprice != null">
            ,b.price=#{price},b.feeprice=#{feeprice},b.range_price=#{rangePrice}
        </if>
        <if test="wprice != null">
            ,b.price=#{price},b.wprice=#{wprice},b.range_price=#{rangePrice}
        </if>
        <if test="type != null">
            ,b.entype=#{type}
        </if>
        <if test="sellUnit != null">
            ,b.sellunit=#{sellUnit}
        </if>
        <if test="priceIsEdit > 0">
            ,a.price_is_edit=#{priceIsEdit}
        </if>
        <if test="customMainImage != null">
            ,b.custom_main_image=#{customMainImage}
        </if>
        where a.pid = b.pid and b.pid = #{pid}
    </update>

    <update id="editAndLockProfit">
        update custom_goods_edit
        set update_count = update_count + 1
        <if test="type == 0">
            ,edit_profit = #{editProfit}
        </if>
        <if test="type == 1">
            ,lock_profit = 1
        </if>
        where pid = #{pid}
    </update>

    <select id="queryOnlineGoodsForList" resultMap="onlineGoodsCheckResultMap"
            parameterType="com.importExpress.pojo.OnlineGoodsCheck">
        select a.pid,a.remotpath,a.eninfo,a.custom_main_image,a.img,a.catid1,a.shop_id,b.click_num,c.`name` as
        category_name
        from custom_benchmark_ready a left join custom_goods_edit b on a.pid = b.pid
        left join 1688_category c on a.catid1 = c.category_id
        where a.valid = 1
        <if test="pid != null">
            and a.pid = #{pid}
        </if>
        <if test="catid != null">
            and a.catid1 in(select category_id from 1688_category where find_in_set(#{catid},path))
        </if>
        <if test="clickNum == 1">
            and b.click_num &lt; 10
        </if>
        <if test="clickNum == 2">
            and b.click_num &gt;= 10 and b.click_num &lt; 50
        </if>
        <if test="clickNum == 3">
            and b.click_num &gt;= 50 and b.click_num &lt; 100
        </if>
        <if test="clickNum == 4">
            and b.click_num &gt;= 100
        </if>
        <if test="clickNum == 0">
            order by a.shop_id
        </if>
        <if test="clickNum > 0">
            order by b.click_num desc
        </if>
        <if test="limitNum > 0">
            limit #{startNum},#{limitNum}
        </if>
    </select>


    <select id="queryOnlineGoodsForListCount" resultType="java.lang.Integer"
            parameterType="com.importExpress.pojo.OnlineGoodsCheck">
        select count(1)
        from custom_benchmark_ready a left join custom_goods_edit b on a.pid = b.pid
        left join 1688_category c on a.catid1 = c.category_id
        where a.valid = 1
        <if test="pid != null">
            and a.pid = #{pid}
        </if>
        <if test="catid != null">
            and a.catid1 in(select category_id from 1688_category where find_in_set(#{catid},path))
        </if>
        <if test="clickNum == 1">
            and b.click_num &lt; 10
        </if>
        <if test="clickNum == 2">
            and b.click_num &gt;= 10 and b.click_num &lt; 50
        </if>
        <if test="clickNum == 3">
            and b.click_num &gt;= 50 and b.click_num &lt; 100
        </if>
        <if test="clickNum == 4">
            and b.click_num &gt;= 100
        </if>
    </select>

    <select id="queryCategoryList" resultMap="categoryResultMap"
            parameterType="com.importExpress.pojo.OnlineGoodsCheck">
        select cat1688.*,ifnull(cbm.total,0) as total from (select category_id as cid,name as category_name,
        path,lv from 1688_category where lv > 0) cat1688 left join
        (select a.catid1,count(a.catid1) as total from custom_benchmark_ready a left join custom_goods_edit b
        on a.pid = b.pid left join 1688_category c on a.catid1 = c.category_id
        where a.valid = 1
        <if test="pid != null">
            and a.pid = #{pid}
        </if>
        <if test="catid != null">
            and a.catid1 in(select category_id from 1688_category where find_in_set(#{catid},path))
        </if>
        <if test="clickNum == 1">
            and b.click_num &lt; 10
        </if>
        <if test="clickNum == 2">
            and b.click_num &gt;= 10 and b.click_num &lt; 50
        </if>
        <if test="clickNum == 3">
            and b.click_num &gt;= 50 and b.click_num &lt; 100
        </if>
        <if test="clickNum == 4">
            and b.click_num &gt;= 100
        </if>
        group by a.catid1) cbm on cat1688.cid=cbm.catid1 order by cat1688.lv,cat1688.category_name asc
    </select>
    <insert id="addReviewRemark">
        insert into goods_review_log(goods_pid,country,review_name,createtime,review_remark,review_score)
        values(#{map.goods_pid},#{map.country},#{map.review_name},#{map.createTime},#{map.review_remark},#{map.review_score});
    </insert>


    <select id="queryMd5ImgByUrlCount" resultType="java.lang.Integer">
        select count(0) from custom_goods_md5
        where goods_md5 = (select goods_md5
        from custom_goods_md5 where pid = #{pid} and remote_path = #{url} and shop_id = #{shopId})
        and shop_id = #{shopId} and ifnull(goods_md5,'') != ''
    </select>

    <select id="queryMd5ImgByUrlList" resultMap="goodsMd5BeanResultMap">
        select pid,shop_id,local_path,remote_path,goods_md5 from custom_goods_md5
        where goods_md5 = (select goods_md5
        from custom_goods_md5 where pid = #{pid} and remote_path = #{url} and shop_id = #{shopId})
        and shop_id = #{shopId} and ifnull(goods_md5,'') != ''
    </select>


    <select id="queryGoodsByPidList" parameterType="java.util.ArrayList" resultMap="queryGoodsResultMap">
        select
        cbu.keyword,cbu.catid1,cbu.pid,cbu.enname,cbu.localpath,cbu.remotpath,cbu.goodsstate,cbu.custom_main_image,
        cbu.ali_name,cbu.ali_img,cbu.ali_pid,cbu.valid,cbu.name,cbu.from_flag,cbu.final_weight,cbu.max_price,
        cbu.bm_flag,cbu.isBenchmark,cbu.source_pro_flag,cbu.source_used_flag,cbu.ocr_match_flag,cbu.unsellableReason,cbu.eninfo
        from custom_benchmark_ready cbu
        where 1=1 and pid in
        <foreach collection="pidList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <update id="updatePidEnInfo" parameterType="com.cbt.bean.CustomGoodsPublish">
        update custom_benchmark_ready set eninfo = #{eninfo}
        where pid = #{pid}
    </update>

    <update id="updateMd5ImgDeleteFlag">
        update custom_goods_md5 a,
                (select goods_md5 from custom_goods_md5 where pid = #{pid}
                  and remote_path = #{url} and ifnull(goods_md5,'') != '' and shop_id = #{shopId}) b
        set a.is_delete = 1
        where a.goods_md5 = b.goods_md5 and a.shop_id = #{shopId}
    </update>

    <delete id="deleteMd5ImgSameTempFlag">
        delete from custom_goods_md5_same where shop_id = #{shopId}
        and goods_md5 in(select goods_md5 from custom_goods_md5 where pid = #{pid}
        and remote_path = #{url} and ifnull(goods_md5,'') != '' and shop_id = #{shopId})
    </delete>


    <select id="queryForMd5List" resultMap="shopMd5BeanResultMap" parameterType="com.importExpress.pojo.ShopMd5Bean">
        select shop_id,pid,goods_md5,md5_num,remote_path,is_delete
        from custom_goods_md5_same
        where 1=1
        <if test="shopId != null">
            and shop_id = #{shopId}
        </if>
        <if test="catid != null">
            and catid = #{catid}
        </if>
        <if test="md5Num == 1">
            and md5_num &lt;= 5
        </if>
        <if test="md5Num == 2">
            and md5_num &gt; 5
        </if>
        <if test="limitNum > 0">
            limit #{startNum},#{limitNum}
        </if>
    </select>

    <select id="queryForMd5ListCount" resultType="java.lang.Integer" parameterType="com.importExpress.pojo.ShopMd5Bean">
        select count(0)
        from custom_goods_md5_same
        where 1=1
        <if test="shopId != null">
            and shop_id = #{shopId}
        </if>
        <if test="catid != null">
            and catid = #{catid}
        </if>
        <if test="md5Num == 1">
            and md5_num &lt;= 5
        </if>
        <if test="md5Num == 2">
            and md5_num &gt; 5
        </if>
    </select>


    <update id="updateImgDeleteByMd5">
        update custom_goods_md5
        set is_delete = 1
        where goods_md5 = #{goodsMd5}
    </update>


    <delete id="deleteMd5ImgNoSameTempFlag">
        delete from custom_goods_md5_no_same
        where goods_md5 = #{goodsMd5}
    </delete>

    <select id="queryMd5NoSameList" resultMap="shopMd5BeanResultMap" parameterType="com.importExpress.pojo.ShopMd5Bean">
        select shop_id,pid,goods_md5,md5_num,remote_path,is_delete
        from custom_goods_md5_no_same
        where 1=1
        <if test="md5Val != null">
            and goods_md5 = #{md5Val}
        </if>
        <if test="limitNum > 0">
            limit #{startNum},#{limitNum}
        </if>
    </select>

    <select id="queryMd5NoSameListCount" resultType="java.lang.Integer" parameterType="com.importExpress.pojo.ShopMd5Bean">
        select count(0)
        from custom_goods_md5_no_same
        where 1=1
        <if test="md5Val != null">
            and goods_md5 = #{md5Val}
        </if>
    </select>

    <select id="queryShopGoodsByMd5" resultMap="goodsMd5DeatilsResultMap">
        select a.id,a.pid,a.shop_id,a.goods_md5,a.local_path,a.remote_path,b.valid
        from custom_goods_md5 a,custom_benchmark_ready b
        where 1=1 and a.goods_md5 = #{md5Val} and a.pid = b.pid and a.is_delete = 0
        order by a.goods_md5
    </select>

    <update id="setNewAliPidInfo">
        update custom_benchmark_ready
        set ali_pid = #{aliPid},ali_price = #{aliPrice},bm_flag = 1 ,isBenchmark = 1
        where pid = #{pid}
    </update>

    <select id="queryPidListByState" resultType="java.lang.String">
        select pid from custom_benchmark_ready
        where goodsstate = #{state}
    </select>

    <update id="updateWeightFlag">
        update custom_benchmark_ready
        set weight_flag = #{flag}
        ,weight = case when (weight = '' or weight is null or weight = '0' or weight = '0.0') then final_weight else weight end
        where pid = #{pid}
    </update>

    <update id="updateSkuInfo">
        update custom_benchmark_ready
        set  sku = #{sku},is_add_car_flag = 1
        where pid = #{pid}
    </update>

    <insert id="insertIntoSkuLog">
        insert into custom_goods_sku_log(pid,old_sku,new_sku,admin_id)
        values(#{pid},#{oldSku} ,#{newSku} ,#{adminId})
    </insert>

    <insert id="remarkSoftGoodsValid">
        insert into needoffshelf_goods(pid, reason)
        values(#{pid}, #{reason})
    </insert>

    <select id="queryPidByShopId" resultType="java.lang.String">
        select pid from custom_benchmark_ready
        where shop_id = #{shopId}
    </select>

    <update id="updateVolumeWeight">
        update custom_benchmark_ready set volume_weight = #{newWeight}
        where pid = #{pid}
    </update>

    <select id="queryGoodsShowInfos" parameterType="com.cbt.bean.CustomGoodsQuery" resultMap="queryGoodsResultMap">
        select
        cbu.pid, cbu.custom_main_image, cbu.isBenchmark, cbu.remotpath, cbu.img, cbu.shop_id,
        cbu.eninfo AS 'name', cbu.valid, cge.is_edited, ifnull(cge.update_time,'') as update_time,
        (
        SELECT COUNT(1) FROM orderinfo oi
        INNER JOIN order_details od ON oi.order_no=od.orderid
        INNER JOIN `user` u ON oi.user_id = u.id
        WHERE oi.state BETWEEN 1 AND 5 AND od.state IN (0,1)
        AND u.is_test=0
        AND (
        u.email not like '%qq.com%' and u.email not like '%ww.com%' and
        u.email not like 'test%'   and  u.email not like '%qq.ss' and u.email not like '%@q.ocm' and
        u.email not like '%qqsss.com' and  u.email not like '%csmfg.com%'  and  u.email not like '%@sourcing-cn.com%'  and
        u.email not like '%@china-synergy%'  and u.email&lt;>'sb33@gmail.com'  and u.email&lt;>'sbtest@gmail.com'  and
        u.email not like '%@qq.co%' and u.email not like '%11.com' and u.email not like '%@qq.ocm' and u.email not like '%@163.com'
        )
        AND od.goods_pid IN (
        cbu.pid
        )
        ) AS 'is_sold_flag'  -- 商品销售次数
        from custom_benchmark_ready cbu
        left join custom_goods_edit cge on cbu.pid = cge.pid
        <where>
            <if test="shopId == null and source == 1">
                <if test="isEdited > -1">  -- 商品已编辑
                    cge.is_edited = #{isEdited}
                </if>
                <if test="valid != -1">
                    and cbu.valid = #{valid}
                </if>
                <if test="isBenchmark == 1">
                    and cbu.isBenchmark = 1 and cbu.bm_flag=1
                </if>
                <if test="isBenchmark > -1 and isBenchmark != 1">
                    and cbu.isBenchmark = #{isBenchmark}
                </if>
                <if test="catid != -1 and catid != 0">
                    and cbu.catid1 in(
                    select category_id from 1688_category where find_in_set(#{catid},path)
                    )
                </if>
            </if>
            <if test="shopId != null and source == 1">
                cbu.shop_id = #{shopId}
                <if test="valid != -1">
                    and cbu.valid = #{valid}
                </if>
            </if>
            <if test="shopId == null and source != 1">
                <if test="valid != -1">
                    cbu.valid = #{valid} and
                </if>
                cbu.pid in(
                    SELECT pid FROM custom_benchmark_show WHERE source = #{source}
                )
            </if>
        </where>
        <if test="shopId == null">
            limit #{page}, #{currPage}
        </if>
    </select>

    <select id="queryGoodsShowInfosCount" parameterType="com.cbt.bean.CustomGoodsQuery" resultType="java.lang.Integer">
        select
        COUNT(1)
        from custom_benchmark_ready cbu
        left join custom_goods_edit cge on cbu.pid = cge.pid
        <where>
            <if test="shopId == null and source == 1">
                <if test="isEdited > -1">  -- 商品已编辑
                    cge.is_edited = #{isEdited}
                </if>
                <if test="valid != -1">
                    and cbu.valid = #{valid}
                </if>
                <if test="isBenchmark == 1">
                    and cbu.isBenchmark = 1 and cbu.bm_flag=1
                </if>
                <if test="isBenchmark > -1 and isBenchmark != 1">
                    and cbu.isBenchmark = #{isBenchmark}
                </if>
                <if test="catid != -1 and catid != 0">
                    and cbu.catid1 in(
                    select category_id from 1688_category where find_in_set(#{catid},path)
                    )
                </if>
            </if>
            <if test="shopId != null and source == 1">
                cbu.shop_id = #{shopId}
                <if test="valid != -1">
                    and cbu.valid = #{valid}
                </if>
            </if>
            <if test="shopId == null and source != 1">
                <if test="valid != -1">
                    cbu.valid = #{valid} and
                </if>
                cbu.pid in(
                    SELECT pid FROM custom_benchmark_show WHERE source = #{source}
                )
            </if>
        </where>
    </select>

    <select id="queryShopGoodsSalesAmountAll" resultType="com.importExpress.pojo.ShopGoodsSalesAmount">
        select shop_id as shopId,goods_num as goodsNum,total_price as totalPrice
        from shop_goods_sales_amount
    </select>

    <select id="queryShopGoodsSalesAmountByShopId" resultType="com.importExpress.pojo.ShopGoodsSalesAmount">
        select shop_id as shopId,goods_num as goodsNum,total_price as totalPrice
        from shop_goods_sales_amount
        where shop_id = #{shopId}
    </select>

    <insert id="insertIntoGoodsImgUpLog">
        insert into custom_goods_img_up_log(pid,img_url,admin_id,remark)
        values(#{pid}, #{imgUrl}, #{adminId}, #{remark})
    </insert>

    <select id="queryGoodsByShopId" resultMap="queryGoodsResultMap">
        select
        cbu.keyword,cbu.catid1,cbu.pid,cbu.enname,cbu.localpath,cbu.remotpath,cbu.goodsstate,cbu.custom_main_image,cbu.is_sold_flag,
        cbu.ali_name,cbu.ali_img,cbu.ali_pid,cbu.valid,cbu.name,cbu.from_flag,cbu.final_weight,cbu.max_price,cbu.shop_id,
        cbu.bm_flag,cbu.isBenchmark,cbu.source_pro_flag,cbu.source_used_flag,cbu.ocr_match_flag,cbu.unsellableReason,cbu.eninfo,
        cbu.feeprice,cbu.fprice,cbu.wholesale_price,cbu.price,cbu.wprice
        from custom_benchmark_ready cbu
        where cbu.shop_id = #{shopId} and valid = 1
    </select>

    <select id="queryKidsCanUploadCatid" resultType="java.lang.String">
        select b.category_id from search_special a,1688_category b where FIND_IN_SET(a.catid,b.path) > 0
    </select>

    <select id="queryAllOffLineReason" resultType="java.util.HashMap">
        select unsellablereason_id,unsellablereason_name from unsellablereason_master
    </select>

    <select id="queryChTypeBySkuId" resultType="java.lang.String">
        select type_name from custom_benchmark_sku_type_name
        where spec_id= #{skuId}
    </select>

    <select id="queryAllShopBlackList" resultType="string">
        select shop_id from shop_blacklist_list
    </select>

    <insert id="insertIntoDescribeLog">
        insert into custom_pid_describe_log(pid,admin_id)
        values(#{pid},#{adminId} )
    </insert>

    <select id="queryDescribeLogInfo" resultType="hashmap">
        select  a.id,a.pid,a.admin_id,DATE_FORMAT(a.create_time,'%Y-%m-%d %H:%i:%S') as create_time, b.admName
        from custom_pid_describe_log a,admuser b where a.pid = #{pid} and  a.admin_id = b.id
        order by a.create_time limit 1
    </select>

    <select id="queryDescribeLogList" resultType="string">
        select pid from custom_pid_describe_log
    </select>

    <select id="getGoodsByPid" resultType="java.util.HashMap">

    select  pid,sku,entype from custom_benchmark_ready where pid=#{pid} limit 1
    </select>

    <insert id="insertIntoGoodsOverSeaInfo" parameterType="com.importExpress.pojo.GoodsOverSea">
        insert into custom_goods_oversea(pid,country_id,admin_id,is_support)
        values(#{pid},#{countryId},#{adminId},#{isSupport})
    </insert>

    <select id="queryGoodsOverSeaInfoByPid" resultType="com.importExpress.pojo.GoodsOverSea">
        select a.id,a.pid,DATE_FORMAT(a.create_time,'%Y-%m-%d %H:%i:%S') as createTime,a.is_support as isSupport,
        a.pid ,b.admName as adminName,a.country_id as countryId,c.country as countryName
        from custom_goods_oversea a left join admuser b on a.admin_id = b.id  left join zone c on c.id = a.country_id
        where a.pid = #{pid}
    </select>

    <update id="setSearchable">
        update custom_benchmark_ready set searchable = #{flag} where pid = #{pid}
    </update>

    <insert id="insertSearchableLog">
        insert into custom_goods_searchable(pid,flag,admin_id)
        values(#{pid},#{flag},#{adminId})
    </insert>

    <insert id="saveGoodsWeightChange" parameterType="com.importExpress.pojo.GoodsWeightChange">
        insert into goods_weight_change(pid,goods_type,weight,volume_weight,admin_id,skuid)
        values(#{pid},#{goodsType},#{weight},#{volumeWeight},#{adminId},#{skuid})
    </insert>

    <select id="queryGoodsWeightChangeList" parameterType="com.importExpress.pojo.GoodsWeightChange"
            resultType="com.importExpress.pojo.GoodsWeightChange">
        select a.id,a.pid,a.goods_type as goodsType,a.weight,a.volume_weight as volumeWeight,a.admin_id as adminId,a.skuid,
        b.admName as adminName,DATE_FORMAT(a.create_time,'%Y-%m-%d %H:%i:%S') as createTime,a.sync_flag as syncFlag,
        a.update_admin_id as updateAdminId,c.admName as updateAdminName, DATE_FORMAT(a.update_time,'%Y-%m-%d %H:%i:%S') as updateTime
        from goods_weight_change a left join admuser b  on a.admin_id = b.id left join admuser c  on a.update_admin_id = c.id
        where 1=1
        <if test="pid !=null">
            and a.pid = #{pid}
        </if>
        <if test="adminId !=null">
            and a.admin_id = #{adminId}
        </if>
        order by a.create_time desc,a.pid
        <if test="limitNum > 0">
            limit #{startNum},#{limitNum}
        </if>
    </select>

    <select id="queryGoodsWeightChangeListCount" parameterType="com.importExpress.pojo.GoodsWeightChange" resultType="int">
        select count(0) from goods_weight_change a left join admuser b  on a.admin_id = b.id
        left join admuser c  on a.update_admin_id = c.id
        where 1=1
        <if test="pid !=null">
            and a.pid = #{pid}
        </if>
        <if test="adminId !=null">
            and a.admin_id = #{adminId}
        </if>
    </select>

    <update id="setGoodsWeightChangeFlag" parameterType="com.importExpress.pojo.GoodsWeightChange">
        update goods_weight_change
        set sync_flag = #{syncFlag},update_time = now(),update_admin_id = #{adminId}
        where id = #{id}
    </update>


    <update id="updateGoodsOverSeaInfo" parameterType="com.importExpress.pojo.GoodsOverSea">
        update custom_goods_oversea set is_support = #{isSupport} ,admin_id = #{adminId}
        where pid = #{pid} and country_id = #{countryId}
    </update>

    <select id="queryBeanByLimit" resultType="com.importExpress.pojo.MongoGoodsBean">
        select
        cbu.keyword,cbu.shop_id,cbu.catid1,cbu.pid,cbu.enname,cbu.localpath,cbu.remotpath,cbu.goodsstate,cbu.custom_main_image,
        cbu.ali_name,cbu.ali_img,cbu.ali_pid,cbu.valid,cbu.name,cbu.from_flag,cbu.final_weight,cbu.max_price,cbu.weight_flag,
        cbu.bm_flag,cbu.isBenchmark,cbu.source_pro_flag,cbu.source_used_flag,cbu.ocr_match_flag,cbu.unsellableReason,cbu.sku,
        ifnull(cge.infringing_flag,0) as infringing_flag,cbu.priority_flag,ifnull(cge.rebid_flag,0) as rebid_flag,
        ifnull(cge.update_time,'') as update_time,ifnull(cge.publish_time,'') as publish_time,ifnull(adu.admName,'') as
        admin_name,cbu.ali_price,
        ifnull(adu.id,0) as admin_id,ifnull(cge.is_edited,0) as is_edited,cbu.is_sold_flag,cbu.weight,
        cbu.is_add_car_flag,ifnull(cge.is_abnormal,0) as is_abnormal,ifnull(cge.off_reason,'') as off_reason,
        ifnull(cge.click_num,0) as click_num,
        ifnull(cbc.complain_id,'') as complain_id,ifnull(cge.price_1688,'') as price_1688,ifnull(cge.weight_check,'') as weight_check,
        (select count(0) from goods_review where goods_pid = cbu.pid) as reviewCount
        from custom_benchmark_ready cbu
        left join custom_goods_edit cge on cbu.pid = cge.pid
        left join custom_benchmark_complain cbc on cbc.pid = cge.pid
        left join (select id,admName from admuser where status =1) adu on cge.admin_id = adu.id
        where 1=1 and cbu.id > #{minId} and #{maxId}>= cbu.id
    </select>


    <select id="queryBeanByPid" resultType="com.importExpress.pojo.MongoGoodsBean">
        select
        cbu.keyword,cbu.shop_id,cbu.catid1,cbu.pid,cbu.enname,cbu.localpath,cbu.remotpath,cbu.goodsstate,cbu.custom_main_image,
        cbu.ali_name,cbu.ali_img,cbu.ali_pid,cbu.valid,cbu.name,cbu.from_flag,cbu.final_weight,cbu.max_price,cbu.weight_flag,
        cbu.bm_flag,cbu.isBenchmark,cbu.source_pro_flag,cbu.source_used_flag,cbu.ocr_match_flag,cbu.unsellableReason,cbu.sku,
        ifnull(cge.infringing_flag,0) as infringing_flag,cbu.priority_flag,ifnull(cge.rebid_flag,0) as rebid_flag,
        ifnull(cge.update_time,'') as update_time,ifnull(cge.publish_time,'') as publish_time,ifnull(adu.admName,'') as
        admin_name,cbu.ali_price,
        ifnull(adu.id,0) as admin_id,ifnull(cge.is_edited,0) as is_edited,cbu.is_sold_flag,cbu.weight,
        cbu.is_add_car_flag,ifnull(cge.is_abnormal,0) as is_abnormal,ifnull(cge.off_reason,'') as off_reason,
        ifnull(cge.click_num,0) as click_num,
        ifnull(cbc.complain_id,'') as complain_id,ifnull(cge.price_1688,'') as price_1688,ifnull(cge.weight_check,'') as weight_check,
        (select count(0) from goods_review where goods_pid = cbu.pid) as reviewCount
        from custom_benchmark_ready cbu
        left join custom_goods_edit cge on cbu.pid = cge.pid
        left join custom_benchmark_complain cbc on cbc.pid = cge.pid
        left join (select id,admName from admuser where status =1) adu on cge.admin_id = adu.id
        where cbu.pid = #{pid}
    </select>

    <insert id="insertIntoPidCatidNum" parameterType="java.util.Map">
        insert into pid_catid_num(catid,total)
        values
        <foreach collection="map" item="value" index="key" separator=",">
            (#{key},#{value})
        </foreach>
    </insert>


    <select id="queryAllCategoryBean" resultMap="categoryResultMap">
        select category_id as cid,name as category_name,
        path,lv,0 as total from 1688_category where lv > 0
    </select>

    <select id="queryCatidByPath" resultType="java.lang.String">
        select category_id from 1688_category where find_in_set(#{catid},path)
    </select>
</mapper>