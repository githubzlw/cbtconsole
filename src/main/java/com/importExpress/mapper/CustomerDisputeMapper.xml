<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.importExpress.mapper.CustomerDisputeMapper">
  <resultMap id="BaseResultMap" type="com.importExpress.pojo.CustomerDisputeBean" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="dispute_id" property="disputeID" jdbcType="VARCHAR" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="user_id" property="userid" jdbcType="VARCHAR" />
    <result column="transaction_id" property="transactionID" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="refund_type" property="refundType" jdbcType="VARCHAR" />
    <result column="return_shipping_address" property="returnShippingAddress" jdbcType="VARCHAR" />
    <result column="merchant_id" property="merchantID" jdbcType="VARCHAR" />
    <result column="gross_amount" property="grossAmount" jdbcType="VARCHAR" />
    <result column="buyer_request_amount" property="buyerRequestAmount" jdbcType="VARCHAR" />
    <result column="seller_offered_amount" property="sellerOfferedAmount" jdbcType="VARCHAR" />
    <result column="amount_refunded" property="amountRefunded" jdbcType="VARCHAR" />
    <result column="currency_code" property="currencyCode" jdbcType="VARCHAR" />
    <result column="offer_type" property="offerType" jdbcType="VARCHAR" />
    <result column="accept_claim_reason" property="acceptClaimReason" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="VARCHAR" />
    <result column="oprate_adm" property="oprateAdm" jdbcType="VARCHAR" />
    <result column="api_type" property="apiType" jdbcType="VARCHAR" />
    <result column="refuse_reason" property="refuseReason" jdbcType="VARCHAR" />
    
  </resultMap>
  
  <insert id="insert" parameterType="com.importExpress.pojo.CustomerDisputeBean">
    insert into customer_dispute (
    dispute_id,user_id, order_no, merchant_id,
      transaction_id, remark,refund_type,return_shipping_address,
      gross_amount,buyer_request_amount,seller_offered_amount,currency_code,
      offer_type,accept_claim_reason,api_type,
      oprate_adm,create_time,update_time
      )
    values (#{disputeID},#{userid},#{orderNo},#{merchantID},#{transactionID},#{remark},
    #{refundType},#{returnShippingAddress},#{grossAmount},#{buyerRequestAmount},
    #{sellerOfferedAmount},#{currencyCode},#{offerType},#{acceptClaimReason},#{apiType},
    #{oprateAdm},now(),now()
      )
  </insert>
  
   <update id="updateStatus">
    update customer_dispute set status=#{status},update_time=now()
    where dispute_id = #{disputeID}
  </update>
  
  <select id="count"  resultType="java.lang.Integer">
    select  count(id) from customer_dispute where  1=1 
    <if test="disputeId != null">
     and dispute_id = #{disputeId}
    </if>
    <if test="status != -2">
     and status = #{status}
    
    </if>
    
  </select>
 
  <select id="confirmList"  resultMap="BaseResultMap">
    select 
     dispute_id,order_no,user_id,transaction_id,
	remark,status,refund_type,return_shipping_address,merchant_id,
	gross_amount,buyer_request_amount,seller_offered_amount,amount_refunded,
	currency_code,offer_type,accept_claim_reason,create_time,
	update_time,oprate_adm,api_type,refuse_reason
    
     from customer_dispute 
       where 1=1
     <if test="disputeid != null">
     and dispute_id = #{disputeid}
    </if>
    <if test="status != -2">
     and status = #{status}
    
    </if>
    order by update_time desc
      limit #{startNum},#{limitNum}
  </select>
 
  <select id="getComfirmByDisputeID" resultMap="BaseResultMap">
  select dispute_id,order_no,user_id,transaction_id,
	remark,status,refund_type,return_shipping_address,merchant_id,
	gross_amount,buyer_request_amount,seller_offered_amount,amount_refunded,
	currency_code,offer_type,accept_claim_reason,create_time,
	update_time,oprate_adm,api_type,refuse_reason from 
	customer_dispute where dispute_id = #{disputeid} limit 1;
  </select>
 
 <update id="updateRefuseReason">
 update customer_dispute set refuse_reason=#{refuseReason},state=-1,update_time=now()
  where dispute_id = #{disputeid}
 </update>
 <update id="updateRefund">
 update customer_dispute set amount_refunded=#{refundedAmount},state=2,update_time=now()
  where dispute_id = #{disputeid}
 </update>
 
 
</mapper>