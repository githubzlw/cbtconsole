<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.importExpress.mapper.RefundResultInfoMapper" >
  <resultMap id="BaseResultMap" type="com.importExpress.pojo.RefundResultInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="orderno" property="orderno" jdbcType="VARCHAR" />
    <result column="userId" property="userid" jdbcType="VARCHAR" />
    <result column="payprice" property="payprice" jdbcType="VARCHAR" />
    <result column="refund_from_transaction_fee" property="refundFromTransactionFee" jdbcType="VARCHAR" />
    <result column="refund_from_received_amount" property="refundFromReceivedAmount" jdbcType="VARCHAR" />
    <result column="total_refunded_amount" property="totalRefundedAmount" jdbcType="VARCHAR" />
    <result column="refundid" property="refundid" jdbcType="VARCHAR" />
    <result column="amount_total" property="amountTotal" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="sale_id" property="saleId" jdbcType="VARCHAR" />
    <result column="parent_payment" property="parentPayment" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.importExpress.pojo.RefundResultInfo" extends="BaseResultMap" >
    <result column="info" property="info" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, orderno, userId, payprice, refund_from_transaction_fee, refund_from_received_amount, 
    total_refunded_amount, refundid, amount_total, state, sale_id, parent_payment, create_time, 
    update_time
  </sql>
  <sql id="Blob_Column_List" >
    info
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.importExpress.pojo.RefundResultInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from refund_result_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.importExpress.pojo.RefundResultInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from refund_result_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from refund_result_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from refund_result_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.importExpress.pojo.RefundResultInfoExample" >
    delete from refund_result_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.importExpress.pojo.RefundResultInfo" >
    insert into refund_result_info (id, orderno, userId, 
      payprice, refund_from_transaction_fee, refund_from_received_amount, 
      total_refunded_amount, refundid, amount_total, 
      state, sale_id, parent_payment, 
      create_time, update_time, info
      )
    values (#{id,jdbcType=INTEGER}, #{orderno,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, 
      #{payprice,jdbcType=VARCHAR}, #{refundFromTransactionFee,jdbcType=VARCHAR}, #{refundFromReceivedAmount,jdbcType=VARCHAR}, 
      #{totalRefundedAmount,jdbcType=VARCHAR}, #{refundid,jdbcType=VARCHAR}, #{amountTotal,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{saleId,jdbcType=VARCHAR}, #{parentPayment,jdbcType=VARCHAR},
      #{createTime,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR}, #{info,jdbcType=LONGVARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.importExpress.pojo.RefundResultInfo" >
    insert into refund_result_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderno != null" >
        orderno,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="payprice != null" >
        payprice,
      </if>
      <if test="refundFromTransactionFee != null" >
        refund_from_transaction_fee,
      </if>
      <if test="refundFromReceivedAmount != null" >
        refund_from_received_amount,
      </if>
      <if test="totalRefundedAmount != null" >
        total_refunded_amount,
      </if>
      <if test="refundid != null" >
        refundid,
      </if>
      <if test="amountTotal != null" >
        amount_total,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="saleId != null" >
        sale_id,
      </if>
      <if test="parentPayment != null" >
        parent_payment,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="info != null" >
        info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderno != null" >
        #{orderno,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="payprice != null" >
        #{payprice,jdbcType=VARCHAR},
      </if>
      <if test="refundFromTransactionFee != null" >
        #{refundFromTransactionFee,jdbcType=VARCHAR},
      </if>
      <if test="refundFromReceivedAmount != null" >
        #{refundFromReceivedAmount,jdbcType=VARCHAR},
      </if>
      <if test="totalRefundedAmount != null" >
        #{totalRefundedAmount,jdbcType=VARCHAR},
      </if>
      <if test="refundid != null" >
        #{refundid,jdbcType=VARCHAR},
      </if>
      <if test="amountTotal != null" >
        #{amountTotal,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="saleId != null" >
        #{saleId,jdbcType=VARCHAR},
      </if>
      <if test="parentPayment != null" >
        #{parentPayment,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="info != null" >
        #{info,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.importExpress.pojo.RefundResultInfoExample" resultType="java.lang.Integer" >
    select count(*) from refund_result_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update refund_result_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderno != null" >
        orderno = #{record.orderno,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.payprice != null" >
        payprice = #{record.payprice,jdbcType=VARCHAR},
      </if>
      <if test="record.refundFromTransactionFee != null" >
        refund_from_transaction_fee = #{record.refundFromTransactionFee,jdbcType=VARCHAR},
      </if>
      <if test="record.refundFromReceivedAmount != null" >
        refund_from_received_amount = #{record.refundFromReceivedAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.totalRefundedAmount != null" >
        total_refunded_amount = #{record.totalRefundedAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.refundid != null" >
        refundid = #{record.refundid,jdbcType=VARCHAR},
      </if>
      <if test="record.amountTotal != null" >
        amount_total = #{record.amountTotal,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.saleId != null" >
        sale_id = #{record.saleId,jdbcType=VARCHAR},
      </if>
      <if test="record.parentPayment != null" >
        parent_payment = #{record.parentPayment,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.info != null" >
        info = #{record.info,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update refund_result_info
    set id = #{record.id,jdbcType=INTEGER},
    orderno = #{record.orderno,jdbcType=VARCHAR},
    userId = #{record.userid,jdbcType=VARCHAR},
    payprice = #{record.payprice,jdbcType=VARCHAR},
    refund_from_transaction_fee = #{record.refundFromTransactionFee,jdbcType=VARCHAR},
    refund_from_received_amount = #{record.refundFromReceivedAmount,jdbcType=VARCHAR},
    total_refunded_amount = #{record.totalRefundedAmount,jdbcType=VARCHAR},
    refundid = #{record.refundid,jdbcType=VARCHAR},
    amount_total = #{record.amountTotal,jdbcType=VARCHAR},
    state = #{record.state,jdbcType=VARCHAR},
    sale_id = #{record.saleId,jdbcType=VARCHAR},
    parent_payment = #{record.parentPayment,jdbcType=VARCHAR},
    create_time = #{record.createTime,jdbcType=VARCHAR},
    update_time = #{record.updateTime,jdbcType=VARCHAR},
    info = #{record.info,jdbcType=LONGVARBINARY}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update refund_result_info
    set id = #{record.id,jdbcType=INTEGER},
    orderno = #{record.orderno,jdbcType=VARCHAR},
    userId = #{record.userid,jdbcType=VARCHAR},
    payprice = #{record.payprice,jdbcType=VARCHAR},
    refund_from_transaction_fee = #{record.refundFromTransactionFee,jdbcType=VARCHAR},
    refund_from_received_amount = #{record.refundFromReceivedAmount,jdbcType=VARCHAR},
    total_refunded_amount = #{record.totalRefundedAmount,jdbcType=VARCHAR},
    refundid = #{record.refundid,jdbcType=VARCHAR},
    amount_total = #{record.amountTotal,jdbcType=VARCHAR},
    state = #{record.state,jdbcType=VARCHAR},
    sale_id = #{record.saleId,jdbcType=VARCHAR},
    parent_payment = #{record.parentPayment,jdbcType=VARCHAR},
    create_time = #{record.createTime,jdbcType=VARCHAR},
    update_time = #{record.updateTime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.importExpress.pojo.RefundResultInfo" >
    update refund_result_info
    <set >
      <if test="orderno != null" >
        orderno = #{orderno,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="payprice != null" >
        payprice = #{payprice,jdbcType=VARCHAR},
      </if>
      <if test="refundFromTransactionFee != null" >
        refund_from_transaction_fee = #{refundFromTransactionFee,jdbcType=VARCHAR},
      </if>
      <if test="refundFromReceivedAmount != null" >
        refund_from_received_amount = #{refundFromReceivedAmount,jdbcType=VARCHAR},
      </if>
      <if test="totalRefundedAmount != null" >
        total_refunded_amount = #{totalRefundedAmount,jdbcType=VARCHAR},
      </if>
      <if test="refundid != null" >
        refundid = #{refundid,jdbcType=VARCHAR},
      </if>
      <if test="amountTotal != null" >
        amount_total = #{amountTotal,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="saleId != null" >
        sale_id = #{saleId,jdbcType=VARCHAR},
      </if>
      <if test="parentPayment != null" >
        parent_payment = #{parentPayment,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="info != null" >
        info = #{info,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.importExpress.pojo.RefundResultInfo" >
    update refund_result_info
    set orderno = #{orderno,jdbcType=VARCHAR},
    userId = #{userid,jdbcType=VARCHAR},
    payprice = #{payprice,jdbcType=VARCHAR},
    refund_from_transaction_fee = #{refundFromTransactionFee,jdbcType=VARCHAR},
    refund_from_received_amount = #{refundFromReceivedAmount,jdbcType=VARCHAR},
    total_refunded_amount = #{totalRefundedAmount,jdbcType=VARCHAR},
    refundid = #{refundid,jdbcType=VARCHAR},
    amount_total = #{amountTotal,jdbcType=VARCHAR},
    state = #{state,jdbcType=VARCHAR},
    sale_id = #{saleId,jdbcType=VARCHAR},
    parent_payment = #{parentPayment,jdbcType=VARCHAR},
    create_time = #{createTime,jdbcType=VARCHAR},
    update_time = #{updateTime,jdbcType=VARCHAR},
    info = #{info,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.importExpress.pojo.RefundResultInfo" >
    update refund_result_info
    set orderno = #{orderno,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=VARCHAR},
      payprice = #{payprice,jdbcType=VARCHAR},
      refund_from_transaction_fee = #{refundFromTransactionFee,jdbcType=VARCHAR},
      refund_from_received_amount = #{refundFromReceivedAmount,jdbcType=VARCHAR},
      total_refunded_amount = #{totalRefundedAmount,jdbcType=VARCHAR},
      refundid = #{refundid,jdbcType=VARCHAR},
      amount_total = #{amountTotal,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      sale_id = #{saleId,jdbcType=VARCHAR},
      parent_payment = #{parentPayment,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>